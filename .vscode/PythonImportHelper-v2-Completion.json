[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "django.contrib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib",
        "description": "django.contrib",
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "environ",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "environ",
        "description": "environ",
        "detail": "environ",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "importPath": "dj_rest_auth.registration.views",
        "description": "dj_rest_auth.registration.views",
        "isExtraImport": true,
        "detail": "dj_rest_auth.registration.views",
        "documentation": {}
    },
    {
        "label": "VerifyEmailView",
        "importPath": "dj_rest_auth.registration.views",
        "description": "dj_rest_auth.registration.views",
        "isExtraImport": true,
        "detail": "dj_rest_auth.registration.views",
        "documentation": {}
    },
    {
        "label": "ConfirmEmailView",
        "importPath": "dj_rest_auth.registration.views",
        "description": "dj_rest_auth.registration.views",
        "isExtraImport": true,
        "detail": "dj_rest_auth.registration.views",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "importPath": "dj_rest_auth.views",
        "description": "dj_rest_auth.views",
        "isExtraImport": true,
        "detail": "dj_rest_auth.views",
        "documentation": {}
    },
    {
        "label": "LogoutView",
        "importPath": "dj_rest_auth.views",
        "description": "dj_rest_auth.views",
        "isExtraImport": true,
        "detail": "dj_rest_auth.views",
        "documentation": {}
    },
    {
        "label": "ActivateAccountView",
        "importPath": "core_root.auth.viewsets.register",
        "description": "core_root.auth.viewsets.register",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "RegisterViewSet",
        "importPath": "core_root.auth.viewsets.register",
        "description": "core_root.auth.viewsets.register",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "RegisterViewSet",
        "importPath": "core_root.auth.viewsets.register",
        "description": "core_root.auth.viewsets.register",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "RegisterViewSet",
        "importPath": "core_root.auth.viewsets.register",
        "description": "core_root.auth.viewsets.register",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "ActivateAccountView",
        "importPath": "core_root.auth.viewsets.register",
        "description": "core_root.auth.viewsets.register",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "ActivateAccountView",
        "importPath": "core_root.auth.viewsets.register",
        "description": "core_root.auth.viewsets.register",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "api_settings",
        "importPath": "rest_framework_simplejwt.settings",
        "description": "rest_framework_simplejwt.settings",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.settings",
        "documentation": {}
    },
    {
        "label": "api_settings",
        "importPath": "rest_framework_simplejwt.settings",
        "description": "rest_framework_simplejwt.settings",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.settings",
        "documentation": {}
    },
    {
        "label": "api_settings",
        "importPath": "rest_framework_simplejwt.settings",
        "description": "rest_framework_simplejwt.settings",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.settings",
        "documentation": {}
    },
    {
        "label": "api_settings",
        "importPath": "rest_framework_simplejwt.settings",
        "description": "rest_framework_simplejwt.settings",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.settings",
        "documentation": {}
    },
    {
        "label": "update_last_login",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "update_last_login",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "update_last_login",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "update_last_login",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "core_root.user.serializers.user",
        "description": "core_root.user.serializers.user",
        "isExtraImport": true,
        "detail": "core_root.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "core_root.user.serializers.user",
        "description": "core_root.user.serializers.user",
        "isExtraImport": true,
        "detail": "core_root.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "core_root.user.serializers.user",
        "description": "core_root.user.serializers.user",
        "isExtraImport": true,
        "detail": "core_root.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordChangeModel",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordResetModel",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordChangeModel",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordResetModel",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "core_root.user.models",
        "description": "core_root.user.models",
        "isExtraImport": true,
        "detail": "core_root.user.models",
        "documentation": {}
    },
    {
        "label": "rest_framework.response",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "ViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "TokenError",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "InvalidToken",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "TokenError",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "InvalidToken",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "TokenError",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "InvalidToken",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "LoginSerializerClass",
        "importPath": "core_root.auth.serializers.login",
        "description": "core_root.auth.serializers.login",
        "isExtraImport": true,
        "detail": "core_root.auth.serializers.login",
        "documentation": {}
    },
    {
        "label": "BasicAuthentication",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "BasicAuthentication",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "django.shortcuts",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "PasswordUpdateSerializer",
        "importPath": "core_root.auth.serializers.passwordreset_serializers",
        "description": "core_root.auth.serializers.passwordreset_serializers",
        "isExtraImport": true,
        "detail": "core_root.auth.serializers.passwordreset_serializers",
        "documentation": {}
    },
    {
        "label": "ResetPasswordSerializer",
        "importPath": "core_root.auth.serializers.passwordreset_serializers",
        "description": "core_root.auth.serializers.passwordreset_serializers",
        "isExtraImport": true,
        "detail": "core_root.auth.serializers.passwordreset_serializers",
        "documentation": {}
    },
    {
        "label": "check_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "base_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base_url",
        "description": "base_url",
        "detail": "base_url",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "resend",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "resend",
        "description": "resend",
        "detail": "resend",
        "documentation": {}
    },
    {
        "label": "generate_token",
        "importPath": "core_root.auth.utils",
        "description": "core_root.auth.utils",
        "isExtraImport": true,
        "detail": "core_root.auth.utils",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "DjangoUnicodeDecodeError",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "force_str",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "DjangoUnicodeDecodeError",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "force_str",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "get_current_site",
        "importPath": "django.contrib.sites.shortcuts",
        "description": "django.contrib.sites.shortcuts",
        "isExtraImport": true,
        "detail": "django.contrib.sites.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_current_site",
        "importPath": "django.contrib.sites.shortcuts",
        "description": "django.contrib.sites.shortcuts",
        "isExtraImport": true,
        "detail": "django.contrib.sites.shortcuts",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "core_root.auth.serializers.register",
        "description": "core_root.auth.serializers.register",
        "isExtraImport": true,
        "detail": "core_root.auth.serializers.register",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "core_root.auth.serializers.register",
        "description": "core_root.auth.serializers.register",
        "isExtraImport": true,
        "detail": "core_root.auth.serializers.register",
        "documentation": {}
    },
    {
        "label": "swagger_auto_schema",
        "importPath": "drf_yasg.utils",
        "description": "drf_yasg.utils",
        "isExtraImport": true,
        "detail": "drf_yasg.utils",
        "documentation": {}
    },
    {
        "label": "swagger_auto_schema",
        "importPath": "drf_yasg.utils",
        "description": "drf_yasg.utils",
        "isExtraImport": true,
        "detail": "drf_yasg.utils",
        "documentation": {}
    },
    {
        "label": "VerifySerializer",
        "importPath": "core_root.auth.serializers.verify_serializer",
        "description": "core_root.auth.serializers.verify_serializer",
        "isExtraImport": true,
        "detail": "core_root.auth.serializers.verify_serializer",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "PasswordResetTokenGenerator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "PasswordResetTokenGenerator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "six",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "six",
        "description": "six",
        "detail": "six",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Rave",
        "importPath": "rave_python.rave",
        "description": "rave_python.rave",
        "isExtraImport": true,
        "detail": "rave_python.rave",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "Rave",
        "importPath": "rave_python",
        "description": "rave_python",
        "isExtraImport": true,
        "detail": "rave_python",
        "documentation": {}
    },
    {
        "label": "RaveExceptions",
        "importPath": "rave_python",
        "description": "rave_python",
        "isExtraImport": true,
        "detail": "rave_python",
        "documentation": {}
    },
    {
        "label": "Misc",
        "importPath": "rave_python",
        "description": "rave_python",
        "isExtraImport": true,
        "detail": "rave_python",
        "documentation": {}
    },
    {
        "label": "Rave",
        "importPath": "rave_python",
        "description": "rave_python",
        "isExtraImport": true,
        "detail": "rave_python",
        "documentation": {}
    },
    {
        "label": "Rave",
        "importPath": "rave_python",
        "description": "rave_python",
        "isExtraImport": true,
        "detail": "rave_python",
        "documentation": {}
    },
    {
        "label": "RaveExceptions",
        "importPath": "rave_python",
        "description": "rave_python",
        "isExtraImport": true,
        "detail": "rave_python",
        "documentation": {}
    },
    {
        "label": "Misc",
        "importPath": "rave_python",
        "description": "rave_python",
        "isExtraImport": true,
        "detail": "rave_python",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "importPath": "core_root.services.courses.enrollment.models",
        "description": "core_root.services.courses.enrollment.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "importPath": "core_root.services.courses.enrollment.models",
        "description": "core_root.services.courses.enrollment.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "importPath": "core_root.services.courses.enrollment.models",
        "description": "core_root.services.courses.enrollment.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "importPath": "core_root.services.courses.enrollment.models",
        "description": "core_root.services.courses.enrollment.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "importPath": "core_root.services.courses.enrollment.models",
        "description": "core_root.services.courses.enrollment.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "importPath": "core_root.services.courses.enrollment.models",
        "description": "core_root.services.courses.enrollment.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "importPath": "core_root.services.courses.enrollment.models",
        "description": "core_root.services.courses.enrollment.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "CardPaymentSerializer",
        "importPath": "core_root.payment.serializers.payment",
        "description": "core_root.payment.serializers.payment",
        "isExtraImport": true,
        "detail": "core_root.payment.serializers.payment",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "CardPaymentViewset",
        "importPath": "core_root.payment.viewsets.payment",
        "description": "core_root.payment.viewsets.payment",
        "isExtraImport": true,
        "detail": "core_root.payment.viewsets.payment",
        "documentation": {}
    },
    {
        "label": "core_root.services.courses.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Tutor",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Video",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Video",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "core_root.services.courses.models",
        "description": "core_root.services.courses.models",
        "isExtraImport": true,
        "detail": "core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "EnrollMentSerializer",
        "importPath": "core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "description": "core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "documentation": {}
    },
    {
        "label": "TotalCourseEnrolledSerializer",
        "importPath": "core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "description": "core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "documentation": {}
    },
    {
        "label": "CbaStudyAppViewset",
        "importPath": "core_root.user.viewsets.user",
        "description": "core_root.user.viewsets.user",
        "isExtraImport": true,
        "detail": "core_root.user.viewsets.user",
        "documentation": {}
    },
    {
        "label": "CbaStudyAppViewset",
        "importPath": "core_root.user.viewsets.user",
        "description": "core_root.user.viewsets.user",
        "isExtraImport": true,
        "detail": "core_root.user.viewsets.user",
        "documentation": {}
    },
    {
        "label": "CbaStudyAppViewset",
        "importPath": "core_root.user.viewsets.user",
        "description": "core_root.user.viewsets.user",
        "isExtraImport": true,
        "detail": "core_root.user.viewsets.user",
        "documentation": {}
    },
    {
        "label": "TotalCourseEnrolledViewset",
        "importPath": "core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "description": "core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "documentation": {}
    },
    {
        "label": "TotalCourseEnrolledViewset",
        "importPath": "core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "description": "core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "isExtraImport": true,
        "detail": "core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "documentation": {}
    },
    {
        "label": "LoginViewSet",
        "importPath": "core_root.auth.viewsets.login",
        "description": "core_root.auth.viewsets.login",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.login",
        "documentation": {}
    },
    {
        "label": "LoginViewSet",
        "importPath": "core_root.auth.viewsets.login",
        "description": "core_root.auth.viewsets.login",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.login",
        "documentation": {}
    },
    {
        "label": "core_root.services.courses.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "core_root.services.courses.fields",
        "description": "core_root.services.courses.fields",
        "detail": "core_root.services.courses.fields",
        "documentation": {}
    },
    {
        "label": "EnrollMentModelSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "SubjectSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "ModuleSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "ContentSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "TextSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "FileSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "ImageSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "VideoSerializer",
        "importPath": "core_root.services.courses.serializers.courseserializer",
        "description": "core_root.services.courses.serializers.courseserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "SearchSerializer",
        "importPath": "core_root.services.courses.serializers.searchserializer",
        "description": "core_root.services.courses.serializers.searchserializer",
        "isExtraImport": true,
        "detail": "core_root.services.courses.serializers.searchserializer",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "attr",
        "description": "attr",
        "isExtraImport": true,
        "detail": "attr",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "SubjectViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "ModuleViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "ContentViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "TextViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "FileViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "ImageViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "VideoViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "EnrollMentModelViewSet",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "SearchCourseViewset",
        "importPath": "core_root.services.courses.viewsets.courseviewsets",
        "description": "core_root.services.courses.viewsets.courseviewsets",
        "isExtraImport": true,
        "detail": "core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "core_root.testingdjangosnippets",
        "description": "core_root.testingdjangosnippets",
        "isExtraImport": true,
        "detail": "core_root.testingdjangosnippets",
        "documentation": {}
    },
    {
        "label": "VideoInteractionViewSet",
        "importPath": "core_root.testingdjangosnippets.viewsets",
        "description": "core_root.testingdjangosnippets.viewsets",
        "isExtraImport": true,
        "detail": "core_root.testingdjangosnippets.viewsets",
        "documentation": {}
    },
    {
        "label": "VideoViewSet",
        "importPath": "core_root.testingdjangosnippets.viewsets",
        "description": "core_root.testingdjangosnippets.viewsets",
        "isExtraImport": true,
        "detail": "core_root.testingdjangosnippets.viewsets",
        "documentation": {}
    },
    {
        "label": "django_countries.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_countries.fields",
        "description": "django_countries.fields",
        "detail": "django_countries.fields",
        "documentation": {}
    },
    {
        "label": "CountryField",
        "importPath": "django_countries.fields",
        "description": "django_countries.fields",
        "isExtraImport": true,
        "detail": "django_countries.fields",
        "documentation": {}
    },
    {
        "label": "CountryField",
        "importPath": "django_countries.fields",
        "description": "django_countries.fields",
        "isExtraImport": true,
        "detail": "django_countries.fields",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "RegisterUserView",
        "importPath": "core_root.user.views",
        "description": "core_root.user.views",
        "isExtraImport": true,
        "detail": "core_root.user.views",
        "documentation": {}
    },
    {
        "label": "ChangePasswordViewset",
        "importPath": "core_root.auth.viewsets.passwordreset_viewsets",
        "description": "core_root.auth.viewsets.passwordreset_viewsets",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.passwordreset_viewsets",
        "documentation": {}
    },
    {
        "label": "ResettingPasswordView",
        "importPath": "core_root.auth.viewsets.passwordreset_viewsets",
        "description": "core_root.auth.viewsets.passwordreset_viewsets",
        "isExtraImport": true,
        "detail": "core_root.auth.viewsets.passwordreset_viewsets",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTimer",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QThread",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "YouTube",
        "importPath": "pytube",
        "description": "pytube",
        "isExtraImport": true,
        "detail": "pytube",
        "documentation": {}
    },
    {
        "label": "YouTube",
        "importPath": "pytube",
        "description": "pytube",
        "isExtraImport": true,
        "detail": "pytube",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "core_app_root.security.user.serializers.user",
        "description": "core_app_root.security.user.serializers.user",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "core_app_root.security.user.serializers.user",
        "description": "core_app_root.security.user.serializers.user",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "core_app_root.security.user.serializers.user",
        "description": "core_app_root.security.user.serializers.user",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordChangeModel",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordResetModel",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "LoginSerializerClass",
        "importPath": "core_app_root.security.auth.serializer.login",
        "description": "core_app_root.security.auth.serializer.login",
        "isExtraImport": true,
        "detail": "core_app_root.security.auth.serializer.login",
        "documentation": {}
    },
    {
        "label": "base_url",
        "importPath": "core_app_root.security",
        "description": "core_app_root.security",
        "isExtraImport": true,
        "detail": "core_app_root.security",
        "documentation": {}
    },
    {
        "label": "generate_token",
        "importPath": "core_app_root.security.auth.utils",
        "description": "core_app_root.security.auth.utils",
        "isExtraImport": true,
        "detail": "core_app_root.security.auth.utils",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "core_app_root.security.auth.serializer.register",
        "description": "core_app_root.security.auth.serializer.register",
        "isExtraImport": true,
        "detail": "core_app_root.security.auth.serializer.register",
        "documentation": {}
    },
    {
        "label": "VerifySerializer",
        "importPath": "core_app_root.security.auth.serializer.verify_serializer",
        "description": "core_app_root.security.auth.serializer.verify_serializer",
        "isExtraImport": true,
        "detail": "core_app_root.security.auth.serializer.verify_serializer",
        "documentation": {}
    },
    {
        "label": "RegisterViewSet",
        "importPath": "core_app_root.security.auth.viewsets.register",
        "description": "core_app_root.security.auth.viewsets.register",
        "isExtraImport": true,
        "detail": "core_app_root.security.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "LoginViewSet",
        "importPath": "core_app_root.security.auth.viewsets.login",
        "description": "core_app_root.security.auth.viewsets.login",
        "isExtraImport": true,
        "detail": "core_app_root.security.auth.viewsets.login",
        "documentation": {}
    },
    {
        "label": "UserViewset",
        "importPath": "core_app_root.security.user.viewsets.user",
        "description": "core_app_root.security.user.viewsets.user",
        "isExtraImport": true,
        "detail": "core_app_root.security.user.viewsets.user",
        "documentation": {}
    },
    {
        "label": "JSONDecodeError",
        "importPath": "requests.exceptions",
        "description": "requests.exceptions",
        "isExtraImport": true,
        "detail": "requests.exceptions",
        "documentation": {}
    },
    {
        "label": "JSONDecodeError",
        "importPath": "requests.exceptions",
        "description": "requests.exceptions",
        "isExtraImport": true,
        "detail": "requests.exceptions",
        "documentation": {}
    },
    {
        "label": "BankAdminManager",
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "UserBankAccountDetails",
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "BankAdminManager",
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "BankAdminManager",
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "UserBankAccountDetails",
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "UserBankAccountDetails",
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "BankAdminManager",
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "BankManagementSerializer",
        "importPath": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "description": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "documentation": {}
    },
    {
        "label": "UserBankDetailsSerializer",
        "importPath": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "description": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "documentation": {}
    },
    {
        "label": "BankManagementViewset",
        "importPath": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "description": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "documentation": {}
    },
    {
        "label": "UserBankDetailsViewset",
        "importPath": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "description": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "isExtraImport": true,
        "detail": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "blankexchange.asgi",
        "description": "blankexchange.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "blankexchange.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-cikg1lw$219%t5l=6lz*dj#bi$@3456iz2h6p%oj7p$ngq$&uh'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n# DEBUG = False\nALLOWED_HOSTS = ['192.168.186.107','*']\n# Application definition",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-cikg1lw$219%t5l=6lz*dj#bi$@3456iz2h6p%oj7p$ngq$&uh'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n# DEBUG = False\nALLOWED_HOSTS = ['192.168.186.107','*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "DEBUG = True\n# DEBUG = False\nALLOWED_HOSTS = ['192.168.186.107','*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['192.168.186.107','*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # third party app",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # third party app\n    'rest_framework',\n    'rest_framework.authtoken',",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "ROOT_URLCONF = 'blankexchange.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "WSGI_APPLICATION = 'blankexchange.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT=os.path.join(BASE_DIR,'static')\n# STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]\n# Default primary key field type",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT=os.path.join(BASE_DIR,'static')\n# STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT=os.path.join(BASE_DIR,'static')\n# STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nREST_FRAMEWORK = {",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT=os.path.join(BASE_DIR,'static')\n# STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT=os.path.join(BASE_DIR,'static')\n# STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (\n    'rest_framework.permissions.IsAuthenticated',\n    ),\n    'DEFAULT_AUTHENTICATION_CLASSES': (",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (\n    'rest_framework.permissions.IsAuthenticated',\n    ),\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n    'rest_framework_simplejwt.authentication.JWTAuthentication',\n    'dj_rest_auth.jwt_auth.JWTCookieAuthentication',\n    'rest_framework.authentication.SessionAuthentication',\n    'rest_framework.authentication.BasicAuthentication',\n    ),",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    'TITLE': 'Blankexchange API',\n    'DESCRIPTION': 'Blankexchange Documentation',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n    # OTHER SETTINGS\n}\nAUTH_USER_MODEL = 'core_app_root_security_user.User'\n# configure Djoser\nDJOSER = {",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'core_app_root_security_user.User'\n# configure Djoser\nDJOSER = {\n    \"USER_ID_FIELD\": \"username\",\n    \"LOGIN_FIELD\": \"email\",\n    \"SEND_ACTIVATION_EMAIL\": True,\n    \"ACTIVATION_URL\": \"activate/{uid}/{token}\",\n    \"PASSWORD_RESET_CONFIRM_URL\": \"reset_password/{uid}/{token}\", # the reset link \n    'SERIALIZERS': {\n        'token_create': 'apps.accounts.serializers.CustomTokenCreateSerializer',",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "DJOSER = {\n    \"USER_ID_FIELD\": \"username\",\n    \"LOGIN_FIELD\": \"email\",\n    \"SEND_ACTIVATION_EMAIL\": True,\n    \"ACTIVATION_URL\": \"activate/{uid}/{token}\",\n    \"PASSWORD_RESET_CONFIRM_URL\": \"reset_password/{uid}/{token}\", # the reset link \n    'SERIALIZERS': {\n        'token_create': 'apps.accounts.serializers.CustomTokenCreateSerializer',\n    },\n}",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\n# CORS_ALLOWED_ORIGINS = [\n#     \"http://localhost:3000\",\n#     \"http://127.0.0.1:3000\",\n#     \"https://react-ts.csb.app\",\n#     \"https://cbastudyapp.com\",\n#     \"https://www.cbastudyapp.com\",\n#     'http://127.0.0.1:5500',\n#     'http://localhost:8000'\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new\nSITE_ID = 1 \n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "SITE_ID = 1 \n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "blankexchange.settings",
        "description": "blankexchange.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "blankexchange.settings",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "blankexchange.urls",
        "description": "blankexchange.urls",
        "peekOfCode": "schema_view = get_schema_view(\n   openapi.Info(\n      title=\"Blanc exchange Api\",\n      default_version='v1',\n      description=\"Blanc exchange App Documentation\",\n      terms_of_service=\"https://www.google.com/policies/terms/\",\n      contact=openapi.Contact(email=\"kezechristian@gmail.com\"),\n      license=openapi.License(name=\"blancexchange licence\"),\n   ),\n   public=True,",
        "detail": "blankexchange.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "blankexchange.urls",
        "description": "blankexchange.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('swagger<format>/', schema_view.without_ui(cache_timeout=0), name='schema-json'),\n    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    path('',include(('core_app_root.security.user.routers','core_app_root.security.user'))),\n    path('',include(('core_app_root.security.auth.routers','core_app_root.security.auth'))),\n    path('bank/',include(('core_app_root.user_services.bankmanagement.routers','core_app_root.user_services.bankmanagement'))),\n    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n]\nif settings.DEBUG:",
        "detail": "blankexchange.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "blankexchange.wsgi",
        "description": "blankexchange.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "blankexchange.wsgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.asgi",
        "description": "codeblazeacademyapi.codeblazeacademyapi.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nimport os\n# environ.Env.read_env(os.path.join(BASE_DIR,'env/.env'))\nfrom datetime import timedelta\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-*f-hyck^ghyp2^0fwfl6dw(i+nyeb^$##+lhfjr3$)a_^-yr42'\n# SECRET_KEY=env('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-*f-hyck^ghyp2^0fwfl6dw(i+nyeb^$##+lhfjr3$)a_^-yr42'\n# SECRET_KEY=env('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG = True\nDEBUG=False\n# DEBUG=env('DEBUG')\nALLOWED_HOSTS = ['*','codeblazeacademyapiv1.vercel.app','localhost','mysite']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*','codeblazeacademyapiv1.vercel.app','localhost','mysite']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'core_root',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'core_root',\n    'core_root.user',\n    'core_root.auth',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'core_root_user.User'\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "ROOT_URLCONF = 'codeblazeacademyapi.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "WSGI_APPLICATION = 'codeblazeacademyapi.wsgi.application'\n# WSGI_APPLICATION = 'codeblazeacademyapi.wsgi.app'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.postgresql',\n#         'NAME': 'postgres',\n#         'USER':'postgres',\n#         'PASSWORD':'Kelechi1999!',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'postgres',\n        'USER':'postgres.pkohsqtzmldcwtixgzyr',\n        'PASSWORD':'Kelechi1999!',\n        'PORT':'5432',\n        'HOST':'aws-0-eu-central-1.pooler.supabase.com'\n    }\n}",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (\n    'rest_framework.permissions.IsAuthenticated',\n    ),\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n    'rest_framework_simplejwt.authentication.JWTAuthentication',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (\n    'rest_framework.permissions.IsAuthenticated',\n    ),\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n    'rest_framework_simplejwt.authentication.JWTAuthentication',\n    'dj_rest_auth.jwt_auth.JWTCookieAuthentication',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (\n    'rest_framework.permissions.IsAuthenticated',\n    ),\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n    'rest_framework_simplejwt.authentication.JWTAuthentication',\n    'dj_rest_auth.jwt_auth.JWTCookieAuthentication',\n    'rest_framework.authentication.SessionAuthentication',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "USE_TZ = True\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (\n    'rest_framework.permissions.IsAuthenticated',\n    ),\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n    'rest_framework_simplejwt.authentication.JWTAuthentication',\n    'dj_rest_auth.jwt_auth.JWTCookieAuthentication',\n    'rest_framework.authentication.SessionAuthentication',\n    'rest_framework.authentication.BasicAuthentication',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': (\n    'rest_framework.permissions.IsAuthenticated',\n    ),\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n    'rest_framework_simplejwt.authentication.JWTAuthentication',\n    'dj_rest_auth.jwt_auth.JWTCookieAuthentication',\n    'rest_framework.authentication.SessionAuthentication',\n    'rest_framework.authentication.BasicAuthentication',\n    ),",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    'TITLE': 'CbaStudyApp API',\n    'DESCRIPTION': 'Cba StudyApp Documentation',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n    # OTHER SETTINGS\n}\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nimport os\nSTATIC_ROOT=os.path.join(BASE_DIR,'static')\n# STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# configure Djoser\nDJOSER = {\n    \"USER_ID_FIELD\": \"username\",",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# configure Djoser\nDJOSER = {\n    \"USER_ID_FIELD\": \"username\",\n    \"LOGIN_FIELD\": \"email\",\n    \"SEND_ACTIVATION_EMAIL\": True,\n    \"ACTIVATION_URL\": \"activate/{uid}/{token}\",\n    \"PASSWORD_RESET_CONFIRM_URL\": \"reset_password/{uid}/{token}\", # the reset link \n    'SERIALIZERS': {\n        'token_create': 'apps.accounts.serializers.CustomTokenCreateSerializer',",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "DJOSER = {\n    \"USER_ID_FIELD\": \"username\",\n    \"LOGIN_FIELD\": \"email\",\n    \"SEND_ACTIVATION_EMAIL\": True,\n    \"ACTIVATION_URL\": \"activate/{uid}/{token}\",\n    \"PASSWORD_RESET_CONFIRM_URL\": \"reset_password/{uid}/{token}\", # the reset link \n    'SERIALIZERS': {\n        'token_create': 'apps.accounts.serializers.CustomTokenCreateSerializer',\n    },\n}",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\n# CORS_ALLOWED_ORIGINS = [\n#     \"http://localhost:3000\",\n#     \"http://127.0.0.1:3000\",\n#     \"https://react-ts.csb.app\",\n#     \"https://cbastudyapp.com\",\n#     \"https://www.cbastudyapp.com\",\n#     'http://127.0.0.1:5500',\n#     'http://localhost:8000'\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new\nSITE_ID = 1 # new\n# REST_USE_JWT = True\n# # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n# EMAIL_HOST = 'smtp.resend.com'\n# EMAIL_HOST_USER = 'resend'\n# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER\n# EMAIL_HOST_PASSWORD = 're_8DpkjdXq_4FATGZzXkub4i536YZHrdWHF'\n# EMAIL_PORT = 587\n# EMAIL_USE_TLS = True",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "SITE_ID = 1 # new\n# REST_USE_JWT = True\n# # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n# EMAIL_HOST = 'smtp.resend.com'\n# EMAIL_HOST_USER = 'resend'\n# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER\n# EMAIL_HOST_PASSWORD = 're_8DpkjdXq_4FATGZzXkub4i536YZHrdWHF'\n# EMAIL_PORT = 587\n# EMAIL_USE_TLS = True\n# ACCOUNT_AUTHENTICATION_METHOD = 'email'",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "LOGIN_URL = 'http://localhost:8000/api/auth/login/'\nJWT_AUTH_COOKIE = 'my-app-auth'\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=60),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n# \"ROTATE_REFRESH_TOKENS\": False,\n    # \"BLACKLIST_AFTER_ROTATION\": False,\n    # \"UPDATE_LAST_LOGIN\": False,\n    # \"ALGORITHM\": \"HS256\",\n    # \"SIGNING_KEY\": settings.SECRET_KEY,",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "JWT_AUTH_COOKIE",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "JWT_AUTH_COOKIE = 'my-app-auth'\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=60),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n# \"ROTATE_REFRESH_TOKENS\": False,\n    # \"BLACKLIST_AFTER_ROTATION\": False,\n    # \"UPDATE_LAST_LOGIN\": False,\n    # \"ALGORITHM\": \"HS256\",\n    # \"SIGNING_KEY\": settings.SECRET_KEY,\n    # \"VERIFYING_KEY\": \"\",",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "description": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=60),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n# \"ROTATE_REFRESH_TOKENS\": False,\n    # \"BLACKLIST_AFTER_ROTATION\": False,\n    # \"UPDATE_LAST_LOGIN\": False,\n    # \"ALGORITHM\": \"HS256\",\n    # \"SIGNING_KEY\": settings.SECRET_KEY,\n    # \"VERIFYING_KEY\": \"\",\n    # \"AUDIENCE\": None,",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.settings",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.urls",
        "description": "codeblazeacademyapi.codeblazeacademyapi.urls",
        "peekOfCode": "schema_view = get_schema_view(\n   openapi.Info(\n      title=\"Codeblaze Academy Site Api\",\n      default_version='v1',\n      description=\"Cba Study App Documentation\",\n      terms_of_service=\"https://www.google.com/policies/terms/\",\n      contact=openapi.Contact(email=\"kezechristian@gmail.com\"),\n      license=openapi.License(name=\"cbasite licence\"),\n   ),\n   public=True,",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.urls",
        "description": "codeblazeacademyapi.codeblazeacademyapi.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('swagger<format>/', schema_view.without_ui(cache_timeout=0), name='schema-json'),\n    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    path('',include(('core_root.routers','core_root'),\n    namespace='core-api')),\n    path('',include(('core_root.payment.routers','core_root_payment'),\n    namespace='core-card-api')),\n    path('',include(('core_root.services.courses.routers','core_root_services_courses'),\n    namespace='core-course-api')),",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "codeblazeacademyapi.codeblazeacademyapi.wsgi",
        "description": "codeblazeacademyapi.codeblazeacademyapi.wsgi",
        "peekOfCode": "application = get_wsgi_application()\napp=application",
        "detail": "codeblazeacademyapi.codeblazeacademyapi.wsgi",
        "documentation": {}
    },
    {
        "label": "LoginSerializerClass",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.serializers.login",
        "description": "codeblazeacademyapi.core_root.auth.serializers.login",
        "peekOfCode": "class LoginSerializerClass(TokenObtainPairSerializer):\n    # ...\n    def validate(self, attrs):\n        data = super().validate(attrs)\n        refresh = self.get_token(self.user)\n        access = refresh.access_token\n        access.set_exp(lifetime=timedelta(hours=100))  # Set access token expiry to 3 hours\n        data['user'] = UserSerializer(self.user).data\n        data['refresh'] = str(refresh)\n        data['access'] = str(access)",
        "detail": "codeblazeacademyapi.core_root.auth.serializers.login",
        "documentation": {}
    },
    {
        "label": "PasswordUpdateSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.serializers.passwordreset_serializers",
        "description": "codeblazeacademyapi.core_root.auth.serializers.passwordreset_serializers",
        "peekOfCode": "class PasswordUpdateSerializer(serializers.ModelSerializer):\n    # old_password=serializers.CharField(max_length=20)\n    # final_password=serializers.CharField(max_length=20)\n    # repeat_final_password=serializers.CharField(max_length=20)\n    email=serializers.CharField(max_length=1000)\n    class Meta:\n        model=PasswordChangeModel\n        fields='__all__'\nclass ResetPasswordSerializer(serializers.ModelSerializer):\n    email=serializers.CharField(max_length=1000)",
        "detail": "codeblazeacademyapi.core_root.auth.serializers.passwordreset_serializers",
        "documentation": {}
    },
    {
        "label": "ResetPasswordSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.serializers.passwordreset_serializers",
        "description": "codeblazeacademyapi.core_root.auth.serializers.passwordreset_serializers",
        "peekOfCode": "class ResetPasswordSerializer(serializers.ModelSerializer):\n    email=serializers.CharField(max_length=1000)\n    # final_password=serializers.CharField(max_length=20)\n    # repeat_final_password=serializers.CharField(max_length=20)\n    class Meta:\n        model=PasswordResetModel\n        fields='__all__'",
        "detail": "codeblazeacademyapi.core_root.auth.serializers.passwordreset_serializers",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.serializers.register",
        "description": "codeblazeacademyapi.core_root.auth.serializers.register",
        "peekOfCode": "class RegisterSerializer(UserSerializer):\n    password = serializers.CharField(max_length=128, min_length=4, required=True)\n    confirm_password=serializers.CharField(max_length=128,min_length=4,required=True)\n    class Meta:\n        model = User\n        fields = ['id','email', 'username','first_name','last_name','password','confirm_password','country']\n    # def validate(self,attrs):\n    #     password=attrs.get('password','')\n    #     password2=attrs.get('password2','')\n    #     if password != password2:",
        "detail": "codeblazeacademyapi.core_root.auth.serializers.register",
        "documentation": {}
    },
    {
        "label": "VerifySerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.serializers.verify_serializer",
        "description": "codeblazeacademyapi.core_root.auth.serializers.verify_serializer",
        "peekOfCode": "class VerifySerializer(serializers.Serializer):\n    confirm_url_end_point=serializers.CharField(max_length=1000)",
        "detail": "codeblazeacademyapi.core_root.auth.serializers.verify_serializer",
        "documentation": {}
    },
    {
        "label": "LoginViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.viewsets.login",
        "description": "codeblazeacademyapi.core_root.auth.viewsets.login",
        "peekOfCode": "class LoginViewSet(viewsets.ModelViewSet):\n    serializer_class = LoginSerializerClass\n    permission_classes = (AllowAny,)\n    http_method_names = ['post']\n    def create(self, request, *args, **kwargs):\n        serializer = self.serializer_class(data=request.data)\n        # print(serializer)\n        if serializer.is_valid():\n            try:\n                valid_user=User.objects.get(email=str(serializer.initial_data['email']))",
        "detail": "codeblazeacademyapi.core_root.auth.viewsets.login",
        "documentation": {}
    },
    {
        "label": "UpdateLastLoginView",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.viewsets.login",
        "description": "codeblazeacademyapi.core_root.auth.viewsets.login",
        "peekOfCode": "class UpdateLastLoginView(APIView):\n    permission_classes = [IsAuthenticated]\n    def post(self, request):\n        # Update the last login of the authenticated user\n        request.user.last_login = timezone.now()\n        request.user.save()\n        return Response({\"message\": \"Last login updated.\"})",
        "detail": "codeblazeacademyapi.core_root.auth.viewsets.login",
        "documentation": {}
    },
    {
        "label": "ChangePasswordViewset",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.viewsets.passwordreset_viewsets",
        "description": "codeblazeacademyapi.core_root.auth.viewsets.passwordreset_viewsets",
        "peekOfCode": "class ChangePasswordViewset(viewsets.ModelViewSet):\n    # http_method_names = ['post']\n    serializer_class = PasswordUpdateSerializer\n    permission_classes=[IsAuthenticated,]\n    queryset=PasswordChangeModel.objects.all()\n    http_method_names=['get','post']\n    def create(self, request):\n        serializer = self.serializer_class(data=request.data)\n        print(\"ok\")\n        if serializer.is_valid():",
        "detail": "codeblazeacademyapi.core_root.auth.viewsets.passwordreset_viewsets",
        "documentation": {}
    },
    {
        "label": "ResettingPasswordView",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.viewsets.passwordreset_viewsets",
        "description": "codeblazeacademyapi.core_root.auth.viewsets.passwordreset_viewsets",
        "peekOfCode": "class ResettingPasswordView(viewsets.ModelViewSet):\n    # http_method_names = ['post']\n    serializer_class = ResetPasswordSerializer\n    permission_classes=[IsAuthenticated]\n    queryset=PasswordResetModel.objects.all()\n    http_method_names=['get','post']\n    def create(self,request):\n        print(\"good\")\n        serializer = self.serializer_class(data=request.data)\n        print(serializer)",
        "detail": "codeblazeacademyapi.core_root.auth.viewsets.passwordreset_viewsets",
        "documentation": {}
    },
    {
        "label": "RefreshViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.viewsets.refresh",
        "description": "codeblazeacademyapi.core_root.auth.viewsets.refresh",
        "peekOfCode": "class RefreshViewSet(viewsets.ViewSet, TokenRefreshView):\n    permission_classes = (AllowAny,)\n    http_method_names = ['post']\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        try:\n            serializer.is_valid(raise_exception=True)\n        except TokenError as e:\n            raise InvalidToken(e.args[0])\n        return Response(serializer.validated_data, status=status.HTTP_200_OK)",
        "detail": "codeblazeacademyapi.core_root.auth.viewsets.refresh",
        "documentation": {}
    },
    {
        "label": "RegisterViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.viewsets.register",
        "description": "codeblazeacademyapi.core_root.auth.viewsets.register",
        "peekOfCode": "class RegisterViewSet(viewsets.ModelViewSet):\n    serializer_class = RegisterSerializer\n    permission_classes = (AllowAny,)\n    http_method_names = ['post']\n    def generate_random_link(self,length=20):\n        # Define the characters allowed in the link\n        characters = string.ascii_letters + string.digits\n        # Generate a random link by selecting characters randomly\n        random_link = ''.join(random.choice(characters) for _ in range(length))\n        return random_link",
        "detail": "codeblazeacademyapi.core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "ActivateAccountView",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.viewsets.register",
        "description": "codeblazeacademyapi.core_root.auth.viewsets.register",
        "peekOfCode": "class ActivateAccountView(viewsets.ModelViewSet):\n    serializer_class = VerifySerializer\n    permission_classes=[AllowAny]\n    queryset=User.objects.all()\n    http_method_names=['get']\n    @action(detail=False, url_path='verify/(?P<email>[^/]+)')\n    def verify_account(self, request, email=None):\n        # Your logic to activate the account using the email parameter\n        user = get_object_or_404(User, email=email)\n        # Update the _active field to True",
        "detail": "codeblazeacademyapi.core_root.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "AuthConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.apps",
        "description": "codeblazeacademyapi.core_root.auth.apps",
        "peekOfCode": "class AuthConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.auth'\n    label='core_root_auth'",
        "detail": "codeblazeacademyapi.core_root.auth.apps",
        "documentation": {}
    },
    {
        "label": "EmailAuthBackend",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.authentication",
        "description": "codeblazeacademyapi.core_root.auth.authentication",
        "peekOfCode": "class EmailAuthBackend:\n    \"\"\"\n    Authenticate using an e-mail address.\n    \"\"\"\n    def authenticate(self, request, username=None, password=None):\n        try:\n            user = User.objects.get(email=username)\n            if user.check_password(password):\n                return user\n            return None",
        "detail": "codeblazeacademyapi.core_root.auth.authentication",
        "documentation": {}
    },
    {
        "label": "create_profile",
        "kind": 2,
        "importPath": "codeblazeacademyapi.core_root.auth.authentication",
        "description": "codeblazeacademyapi.core_root.auth.authentication",
        "peekOfCode": "def create_profile(backend, user, *args, **kwargs):\n    \"\"\"\n    Create user profile for social authentication\n    \"\"\"\n    # Profile.objects.get_or_create(user=user)",
        "detail": "codeblazeacademyapi.core_root.auth.authentication",
        "documentation": {}
    },
    {
        "label": "TokenGenerator",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.auth.utils",
        "description": "codeblazeacademyapi.core_root.auth.utils",
        "peekOfCode": "class TokenGenerator(PasswordResetTokenGenerator):\n    def _make_hash_value(self, user, timestamp):\n        return (six.text_type(user.pk)+six.text_type(timestamp)+six.text_type(user.is_active))\n    def check_token(self, user, token):\n        # Override the check_token method to always return True\n        return True\ngenerate_token = TokenGenerator()",
        "detail": "codeblazeacademyapi.core_root.auth.utils",
        "documentation": {}
    },
    {
        "label": "generate_token",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.auth.utils",
        "description": "codeblazeacademyapi.core_root.auth.utils",
        "peekOfCode": "generate_token = TokenGenerator()",
        "detail": "codeblazeacademyapi.core_root.auth.utils",
        "documentation": {}
    },
    {
        "label": "CardPaymentSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.payment.serializers.payment",
        "description": "codeblazeacademyapi.core_root.payment.serializers.payment",
        "peekOfCode": "class CardPaymentSerializer(serializers.Serializer):\n    cardno=serializers.CharField(max_length=100)\n    cvv=serializers.CharField(max_length=10)\n    expirymonth=serializers.CharField(max_length=100)\n    expiryyear=serializers.CharField(max_length=100)\n    amount=serializers.CharField(max_length=1000000000)\n    class Meta:\n        fields='__all__'",
        "detail": "codeblazeacademyapi.core_root.payment.serializers.payment",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "description": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))\nENV_FILE = os.path.join(BASE_DIR, 'env', '.env')  # Adjust the path accordingly\nimport sys\nsys.path.append(BASE_DIR)\nprint(BASE_DIR)\nprint(ENV_FILE)\nload_dotenv(ENV_FILE)\nRAVE_PUBLIC_KEY = config('RAVE_PUBLIC_KEY')\nRAVE_SECRET_KEY = config('RAVE_SECRET_KEY')\nrave=Rave(RAVE_PUBLIC_KEY,RAVE_SECRET_KEY)",
        "detail": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "documentation": {}
    },
    {
        "label": "ENV_FILE",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "description": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "peekOfCode": "ENV_FILE = os.path.join(BASE_DIR, 'env', '.env')  # Adjust the path accordingly\nimport sys\nsys.path.append(BASE_DIR)\nprint(BASE_DIR)\nprint(ENV_FILE)\nload_dotenv(ENV_FILE)\nRAVE_PUBLIC_KEY = config('RAVE_PUBLIC_KEY')\nRAVE_SECRET_KEY = config('RAVE_SECRET_KEY')\nrave=Rave(RAVE_PUBLIC_KEY,RAVE_SECRET_KEY)\npayload = {",
        "detail": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "documentation": {}
    },
    {
        "label": "RAVE_PUBLIC_KEY",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "description": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "peekOfCode": "RAVE_PUBLIC_KEY = config('RAVE_PUBLIC_KEY')\nRAVE_SECRET_KEY = config('RAVE_SECRET_KEY')\nrave=Rave(RAVE_PUBLIC_KEY,RAVE_SECRET_KEY)\npayload = {\n\"cardno\":\"5338530817398694\",\n\"cvv\":\"289\",\n\"expirymonth\": \"06\",\n\"expiryyear\": \"26\",\n\"amount\": \"100\",\n\"email\": \"kezechristian@gmail.com\",",
        "detail": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "documentation": {}
    },
    {
        "label": "RAVE_SECRET_KEY",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "description": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "peekOfCode": "RAVE_SECRET_KEY = config('RAVE_SECRET_KEY')\nrave=Rave(RAVE_PUBLIC_KEY,RAVE_SECRET_KEY)\npayload = {\n\"cardno\":\"5338530817398694\",\n\"cvv\":\"289\",\n\"expirymonth\": \"06\",\n\"expiryyear\": \"26\",\n\"amount\": \"100\",\n\"email\": \"kezechristian@gmail.com\",\n\"phonenumber\": \"08082182438\",",
        "detail": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "documentation": {}
    },
    {
        "label": "payload",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "description": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "peekOfCode": "payload = {\n\"cardno\":\"5338530817398694\",\n\"cvv\":\"289\",\n\"expirymonth\": \"06\",\n\"expiryyear\": \"26\",\n\"amount\": \"100\",\n\"email\": \"kezechristian@gmail.com\",\n\"phonenumber\": \"08082182438\",\n\"firstname\": \"CHRISTIAN\",\n\"lastname\": \"KELECHI EZE\",",
        "detail": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "documentation": {}
    },
    {
        "label": "res",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "description": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "peekOfCode": "res = rave.Card.charge(payload)\nprint(\"executed\")\nif res[\"suggestedAuth\"]:\n    arg = Misc.getTypeOfArgsRequired(res[\"suggestedAuth\"])\n    if arg == \"pin\":\n        Misc.updatePayload(res[\"suggestedAuth\"], payload, pin=\"5701\")\n    if arg == \"address\":\n        Misc.updatePayload(res[\"suggestedAuth\"], payload, address= {\"billingzip\": \"07205\", \"billingcity\": \"Hillside\", \"billingaddress\": \"470 Mundet PI\", \"billingstate\": \"NJ\", \"billingcountry\": \"US\"})\n    res = rave.Card.charge(payload)\nif res[\"validationRequired\"]:",
        "detail": "codeblazeacademyapi.core_root.payment.testfolderscripts.testpayment",
        "documentation": {}
    },
    {
        "label": "CardPaymentViewset",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.payment.viewsets.payment",
        "description": "codeblazeacademyapi.core_root.payment.viewsets.payment",
        "peekOfCode": "class CardPaymentViewset(viewsets.ModelViewSet):\n    serializer_class=CardPaymentSerializer\n    http_method_names=['post']\n    permission_classes=[IsAuthenticated,]\n    def create(self,request):\n        # print(request.data)\n        serializer=self.serializer_class(data=request.data)\n        if serializer.is_valid():\n            return Response({'data':\"res\"},status=status.HTTP_200_OK)\n    def get_queryset(self):",
        "detail": "codeblazeacademyapi.core_root.payment.viewsets.payment",
        "documentation": {}
    },
    {
        "label": "PaymentConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.payment.apps",
        "description": "codeblazeacademyapi.core_root.payment.apps",
        "peekOfCode": "class PaymentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.payment'\n    label='core_root_payment'",
        "detail": "codeblazeacademyapi.core_root.payment.apps",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.payment.routers",
        "description": "codeblazeacademyapi.core_root.payment.routers",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'payment', CardPaymentViewset,basename='core_root_payment')\n# app_name='core_root_payment'\nurlpatterns=[\n    *router.urls\n]",
        "detail": "codeblazeacademyapi.core_root.payment.routers",
        "documentation": {}
    },
    {
        "label": "AbstractBaseCourseManager",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.abstractcustomclasses.course",
        "description": "codeblazeacademyapi.core_root.services.courses.abstractcustomclasses.course",
        "peekOfCode": "class AbstractBaseCourseManager:\n    def __init__(self):\n        super().__init__()\n        self.tutor_class=Tutor\n        self.course_class=Course",
        "detail": "codeblazeacademyapi.core_root.services.courses.abstractcustomclasses.course",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.migrations.0001_initial",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('core_root_services_courses', '0005_delete_enrollmentmodel'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='EnrollMentModel',\n            fields=[",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "EnrollMentSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "peekOfCode": "class EnrollMentSerializer(serializers.ModelSerializer):\n    course_slug=serializers.CharField(max_length=9000)\n    class Meta:\n        model=EnrollMentModel\n        fields=['user','course_enrolled','date_of_enrollment','amount_paid','course_slug']\nclass TotalCourseEnrolledSerializer(serializers.Serializer):\n    user_email=serializers.CharField(max_length=1000)\n    class Meta:\n        field=['user_email']",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "documentation": {}
    },
    {
        "label": "TotalCourseEnrolledSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "peekOfCode": "class TotalCourseEnrolledSerializer(serializers.Serializer):\n    user_email=serializers.CharField(max_length=1000)\n    class Meta:\n        field=['user_email']",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.serializers.enrollmentserializer",
        "documentation": {}
    },
    {
        "label": "parent_dir",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testfolderscripts.fetchstudents",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testfolderscripts.fetchstudents",
        "peekOfCode": "parent_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))))\n# Add the project directory to the sys.path\nsys.path.append(parent_dir)\n# Set the DJANGO_SETTINGS_MODULE environment variable\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'codeblazeacademyapi.settings')\n# Initialize Django\nimport django\ndjango.setup()\n# Now you can import your models\nfrom core_root.services.courses.enrollment.models import EnrollMentModel",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testfolderscripts.fetchstudents",
        "documentation": {}
    },
    {
        "label": "all_python_students",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testfolderscripts.fetchstudents",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testfolderscripts.fetchstudents",
        "peekOfCode": "all_python_students = EnrollMentModel.objects.all().filter(course_enrolled__title='Python Programming')\n# Print details (assuming there are multiple records)\nprint(all_python_students)",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testfolderscripts.fetchstudents",
        "documentation": {}
    },
    {
        "label": "EnrollmentViewset",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "peekOfCode": "class EnrollmentViewset(viewsets.ModelViewSet):\n    serializer_class=EnrollMentSerializer\n    http_method_names=['post']\n    permission_classes=[]\n    def create(self,request):\n        serializer=self.serializer_class(data=request.data)\n        if serializer.is_valid():\n            # course_enrolled=serializer.validated_data['course_enrolled']\n            # file.close()\n            serializer.save()",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "documentation": {}
    },
    {
        "label": "TotalCourseEnrolledViewset",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "peekOfCode": "class TotalCourseEnrolledViewset(viewsets.ModelViewSet):\n    serializer_class=TotalCourseEnrolledSerializer\n    http_method_names=['post']\n    permission_classes=[IsAuthenticated,]\n    def get_queryset(self):\n        return super().get_queryset()\n    # serializer_class=\n    def create(self,request):\n        serializer=self.serializer_class(data=request.data)\n        if serializer.is_valid():",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.viewsets.enrollmentviewset",
        "documentation": {}
    },
    {
        "label": "EnrollmentConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.apps",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.apps",
        "peekOfCode": "class EnrollmentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.services.courses.enrollment'\n    label='core_root_services_courses_enrollment'",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.apps",
        "documentation": {}
    },
    {
        "label": "EnrollMentModel",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.models",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.models",
        "peekOfCode": "class EnrollMentModel(models.Model):\n    user=models.ForeignKey(User,on_delete=models.CASCADE)\n    course_enrolled=models.ForeignKey(Course,on_delete=models.CASCADE,blank=True,null=True)\n    date_of_enrollment=models.DateTimeField(auto_now=True)\n    amount_paid=models.FloatField()\n    def __str__(self):\n        return f\"{self.user} enrolled for {self.course_enrolled} on {self.date_of_enrollment} with full payment of {self.amount_paid}\"",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.models",
        "documentation": {}
    },
    {
        "label": "login_endpoint",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "login_endpoint = \"http://localhost:8000/api/auth/login/\"\n# Data to be sent in the login request\nlogin_data = {\n    'email': 'kk@gmail.com',\n    'password': '1999'\n}\n# Make a POST request to the login endpoint\nlogin_response = requests.post(login_endpoint, json=login_data)\n# Check if the login was successful\n    # Extract the access token",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "login_data",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "login_data = {\n    'email': 'kk@gmail.com',\n    'password': '1999'\n}\n# Make a POST request to the login endpoint\nlogin_response = requests.post(login_endpoint, json=login_data)\n# Check if the login was successful\n    # Extract the access token\naccess_token=login_response.json()['access']\naccess = str(access_token)",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "login_response",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "login_response = requests.post(login_endpoint, json=login_data)\n# Check if the login was successful\n    # Extract the access token\naccess_token=login_response.json()['access']\naccess = str(access_token)\n# # Use the access token for subsequent requests by including it in the headers\nheaders = {'Authorization': f'Bearer {access_token}'}\n# Now you can make requests to protected endpoints using the provided access token\n# For example, you can make an enrollment request as shown below:\n# Define the enrollment endpoint URL",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "access",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "access = str(access_token)\n# # Use the access token for subsequent requests by including it in the headers\nheaders = {'Authorization': f'Bearer {access_token}'}\n# Now you can make requests to protected endpoints using the provided access token\n# For example, you can make an enrollment request as shown below:\n# Define the enrollment endpoint URL\nenrollment_endpoint = \"http://localhost:8000/api/course/enrollments/\"  # Replace with your actual enrollment endpoint\n# Replace with the actual course slug selected by the user\ncourse_slug = 'python-programming'\n# Data to be sent in the request",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "headers = {'Authorization': f'Bearer {access_token}'}\n# Now you can make requests to protected endpoints using the provided access token\n# For example, you can make an enrollment request as shown below:\n# Define the enrollment endpoint URL\nenrollment_endpoint = \"http://localhost:8000/api/course/enrollments/\"  # Replace with your actual enrollment endpoint\n# Replace with the actual course slug selected by the user\ncourse_slug = 'python-programming'\n# Data to be sent in the request\ndata = {\n    'course_slug': course_slug,",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "enrollment_endpoint",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "enrollment_endpoint = \"http://localhost:8000/api/course/enrollments/\"  # Replace with your actual enrollment endpoint\n# Replace with the actual course slug selected by the user\ncourse_slug = 'python-programming'\n# Data to be sent in the request\ndata = {\n    'course_slug': course_slug,\n    'amount_paid': 100.0  # Adjust the amount as needed\n}\n# Make a POST request to the enrollment endpoint with the access token in the headers\nenrollment_response = requests.post(enrollment_endpoint, json=data, headers=headers)",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "course_slug",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "course_slug = 'python-programming'\n# Data to be sent in the request\ndata = {\n    'course_slug': course_slug,\n    'amount_paid': 100.0  # Adjust the amount as needed\n}\n# Make a POST request to the enrollment endpoint with the access token in the headers\nenrollment_response = requests.post(enrollment_endpoint, json=data, headers=headers)\n# Print the enrollment response status code\nprint(enrollment_response.json())",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "data = {\n    'course_slug': course_slug,\n    'amount_paid': 100.0  # Adjust the amount as needed\n}\n# Make a POST request to the enrollment endpoint with the access token in the headers\nenrollment_response = requests.post(enrollment_endpoint, json=data, headers=headers)\n# Print the enrollment response status code\nprint(enrollment_response.json())\n# Print the enrollment response content as JSON\n# try:",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "enrollment_response",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "description": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "peekOfCode": "enrollment_response = requests.post(enrollment_endpoint, json=data, headers=headers)\n# Print the enrollment response status code\nprint(enrollment_response.json())\n# Print the enrollment response content as JSON\n# try:\n#     print(enrollment_response.json())\n# except ValueError:\n#     print(enrollment_response.text)",
        "detail": "codeblazeacademyapi.core_root.services.courses.enrollment.testenrollment",
        "documentation": {}
    },
    {
        "label": "HtmlandcssCourseConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.htmlandcss_course.apps",
        "description": "codeblazeacademyapi.core_root.services.courses.htmlandcss_course.apps",
        "peekOfCode": "class HtmlandcssCourseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.services.courses.htmlandcss_course'\n    label='core_root_services_courses_htmlandcss_course'",
        "detail": "codeblazeacademyapi.core_root.services.courses.htmlandcss_course.apps",
        "documentation": {}
    },
    {
        "label": "JavascriptCourseConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.javascript_course.apps",
        "description": "codeblazeacademyapi.core_root.services.courses.javascript_course.apps",
        "peekOfCode": "class JavascriptCourseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.services.courses.javascript_course'\n    label='core_root_services_courses_javascript_course'",
        "detail": "codeblazeacademyapi.core_root.services.courses.javascript_course.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.migrations.0001_initial",
        "description": "codeblazeacademyapi.core_root.services.courses.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Course',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "codeblazeacademyapi.core_root.services.courses.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.migrations.0002_content",
        "description": "codeblazeacademyapi.core_root.services.courses.migrations.0002_content",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contenttypes', '0002_remove_content_type_name'),\n        ('core_root_services_courses', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Content',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "codeblazeacademyapi.core_root.services.courses.migrations.0002_content",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.migrations.0003_basecontent_alter_content_content_type_video_text_and_more",
        "description": "codeblazeacademyapi.core_root.services.courses.migrations.0003_basecontent_alter_content_content_type_video_text_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contenttypes', '0002_remove_content_type_name'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('core_root_services_courses', '0002_content'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='BaseContent',\n            fields=[",
        "detail": "codeblazeacademyapi.core_root.services.courses.migrations.0003_basecontent_alter_content_content_type_video_text_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.migrations.0004_alter_content_options_alter_module_options_and_more",
        "description": "codeblazeacademyapi.core_root.services.courses.migrations.0004_alter_content_options_alter_module_options_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_services_courses', '0003_basecontent_alter_content_content_type_video_text_and_more'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='content',\n            options={'ordering': ['order']},\n        ),\n        migrations.AlterModelOptions(",
        "detail": "codeblazeacademyapi.core_root.services.courses.migrations.0004_alter_content_options_alter_module_options_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.migrations.0005_delete_enrollmentmodel",
        "description": "codeblazeacademyapi.core_root.services.courses.migrations.0005_delete_enrollmentmodel",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_services_courses', '0004_alter_content_options_alter_module_options_and_more'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='EnrollMentModel',\n        ),\n    ]",
        "detail": "codeblazeacademyapi.core_root.services.courses.migrations.0005_delete_enrollmentmodel",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.migrations.0006_course_course_price",
        "description": "codeblazeacademyapi.core_root.services.courses.migrations.0006_course_course_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_services_courses', '0005_delete_enrollmentmodel'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='course',\n            name='course_price',\n            field=models.FloatField(blank=True, null=True),\n        ),",
        "detail": "codeblazeacademyapi.core_root.services.courses.migrations.0006_course_course_price",
        "documentation": {}
    },
    {
        "label": "PythonCourseConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.python_course.apps",
        "description": "codeblazeacademyapi.core_root.services.courses.python_course.apps",
        "peekOfCode": "class PythonCourseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.services.courses.python_course'\n    label='core_root_services_courses_python_course'",
        "detail": "codeblazeacademyapi.core_root.services.courses.python_course.apps",
        "documentation": {}
    },
    {
        "label": "ReactCourseConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.react_course.apps",
        "description": "codeblazeacademyapi.core_root.services.courses.react_course.apps",
        "peekOfCode": "class ReactCourseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.services.courses.react_course'\n    label='core_root_services_courses_react_course'",
        "detail": "codeblazeacademyapi.core_root.services.courses.react_course.apps",
        "documentation": {}
    },
    {
        "label": "SubjectSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class SubjectSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Subject\n        fields='__all__'\nclass CourseSerializer(serializers.ModelSerializer):\n    subject=SubjectSerializer()\n    class Meta:\n        model=Course\n        fields='__all__'\nclass ModuleSerializer(serializers.ModelSerializer):",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class CourseSerializer(serializers.ModelSerializer):\n    subject=SubjectSerializer()\n    class Meta:\n        model=Course\n        fields='__all__'\nclass ModuleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Module\n        fields='__all__'\nclass ContentSerializer(serializers.ModelSerializer):",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "ModuleSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class ModuleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Module\n        fields='__all__'\nclass ContentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Content\n        fields='__all__'\nclass TextSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "ContentSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class ContentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Content\n        fields='__all__'\nclass TextSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Text\n        fields='__all__'\nclass FileSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "TextSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class TextSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Text\n        fields='__all__'\nclass FileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=File\n        fields='__all__'\nclass ImageSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "FileSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class FileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=File\n        fields='__all__'\nclass ImageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Image\n        fields='__all__'\nclass VideoSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "ImageSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class ImageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Image\n        fields='__all__'\nclass VideoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Video\n        fields='__all__'\nclass EnrollMentModelSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "VideoSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class VideoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Video\n        fields='__all__'\nclass EnrollMentModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=EnrollMentModel\n        fields='__all__'",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "EnrollMentModelSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "peekOfCode": "class EnrollMentModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=EnrollMentModel\n        fields='__all__'",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.courseserializer",
        "documentation": {}
    },
    {
        "label": "SearchSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.serializers.searchserializer",
        "description": "codeblazeacademyapi.core_root.services.courses.serializers.searchserializer",
        "peekOfCode": "class SearchSerializer(serializers.Serializer):\n    search=serializers.CharField(max_length=1000000)",
        "detail": "codeblazeacademyapi.core_root.services.courses.serializers.searchserializer",
        "documentation": {}
    },
    {
        "label": "SubjectViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class SubjectViewSet(viewsets.ModelViewSet):\n    queryset = Subject.objects.all()\n    serializer_class = SubjectSerializer\nclass CourseViewSet(viewsets.ModelViewSet):\n    queryset = Course.objects.all()\n    serializer_class = CourseSerializer\nclass ModuleViewSet(viewsets.ModelViewSet):\n    queryset = Module.objects.all()\n    serializer_class = ModuleSerializer\nclass ContentViewSet(viewsets.ModelViewSet):",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class CourseViewSet(viewsets.ModelViewSet):\n    queryset = Course.objects.all()\n    serializer_class = CourseSerializer\nclass ModuleViewSet(viewsets.ModelViewSet):\n    queryset = Module.objects.all()\n    serializer_class = ModuleSerializer\nclass ContentViewSet(viewsets.ModelViewSet):\n    queryset = Content.objects.all()\n    serializer_class = ContentSerializer\nclass TextViewSet(viewsets.ModelViewSet):",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "ModuleViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class ModuleViewSet(viewsets.ModelViewSet):\n    queryset = Module.objects.all()\n    serializer_class = ModuleSerializer\nclass ContentViewSet(viewsets.ModelViewSet):\n    queryset = Content.objects.all()\n    serializer_class = ContentSerializer\nclass TextViewSet(viewsets.ModelViewSet):\n    queryset = Text.objects.all()\n    serializer_class = TextSerializer\nclass FileViewSet(viewsets.ModelViewSet):",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "ContentViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class ContentViewSet(viewsets.ModelViewSet):\n    queryset = Content.objects.all()\n    serializer_class = ContentSerializer\nclass TextViewSet(viewsets.ModelViewSet):\n    queryset = Text.objects.all()\n    serializer_class = TextSerializer\nclass FileViewSet(viewsets.ModelViewSet):\n    queryset = File.objects.all()\n    serializer_class = FileSerializer\nclass ImageViewSet(viewsets.ModelViewSet):",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "TextViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class TextViewSet(viewsets.ModelViewSet):\n    queryset = Text.objects.all()\n    serializer_class = TextSerializer\nclass FileViewSet(viewsets.ModelViewSet):\n    queryset = File.objects.all()\n    serializer_class = FileSerializer\nclass ImageViewSet(viewsets.ModelViewSet):\n    queryset = Image.objects.all()\n    serializer_class = ImageSerializer\nclass VideoViewSet(viewsets.ModelViewSet):",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "FileViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class FileViewSet(viewsets.ModelViewSet):\n    queryset = File.objects.all()\n    serializer_class = FileSerializer\nclass ImageViewSet(viewsets.ModelViewSet):\n    queryset = Image.objects.all()\n    serializer_class = ImageSerializer\nclass VideoViewSet(viewsets.ModelViewSet):\n    queryset = Video.objects.all()\n    serializer_class = VideoSerializer\nclass EnrollMentModelViewSet(viewsets.ModelViewSet):",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "ImageViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class ImageViewSet(viewsets.ModelViewSet):\n    queryset = Image.objects.all()\n    serializer_class = ImageSerializer\nclass VideoViewSet(viewsets.ModelViewSet):\n    queryset = Video.objects.all()\n    serializer_class = VideoSerializer\nclass EnrollMentModelViewSet(viewsets.ModelViewSet):\n    queryset = EnrollMentModel.objects.all()\n    serializer_class = EnrollMentModelSerializer\n    def create(self, request, *args, **kwargs):",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "VideoViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class VideoViewSet(viewsets.ModelViewSet):\n    queryset = Video.objects.all()\n    serializer_class = VideoSerializer\nclass EnrollMentModelViewSet(viewsets.ModelViewSet):\n    queryset = EnrollMentModel.objects.all()\n    serializer_class = EnrollMentModelSerializer\n    def create(self, request, *args, **kwargs):\n        # Assuming your front-end sends the selected course slug in the request data\n        course_slug = request.data.get('course_slug')  # Adjust based on your front-end implementation\n        # Get the course based on the slug",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "EnrollMentModelViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class EnrollMentModelViewSet(viewsets.ModelViewSet):\n    queryset = EnrollMentModel.objects.all()\n    serializer_class = EnrollMentModelSerializer\n    def create(self, request, *args, **kwargs):\n        # Assuming your front-end sends the selected course slug in the request data\n        course_slug = request.data.get('course_slug')  # Adjust based on your front-end implementation\n        # Get the course based on the slug\n        try:\n            course = Course.objects.get(slug=course_slug)\n        except Course.DoesNotExist:",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "SearchCourseViewset",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "description": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "peekOfCode": "class SearchCourseViewset(viewsets.ModelViewSet):\n    serializer_class=SearchSerializer\n    http_method_names=['get','post']\n    permission_classes=[IsAuthenticated,]\n    def create(self,request):\n        serializer=self.serializer_class(data=request.data)\n        if serializer.is_valid():\n            search=serializer.validated_data['search']\n            print(search)\n            all_courses=Course.objects.all()",
        "detail": "codeblazeacademyapi.core_root.services.courses.viewsets.courseviewsets",
        "documentation": {}
    },
    {
        "label": "SubjectAdmin",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.admin",
        "description": "codeblazeacademyapi.core_root.services.courses.admin",
        "peekOfCode": "class SubjectAdmin(admin.ModelAdmin):\n    list_display = ['title', 'slug']\n    prepopulated_fields = {'slug': ('title',)}\nclass ModuleInline(admin.StackedInline):\n    model = Module\nadmin.site.register(Course)\nadmin.site.register(Content)\nadmin.site.register(Module)",
        "detail": "codeblazeacademyapi.core_root.services.courses.admin",
        "documentation": {}
    },
    {
        "label": "ModuleInline",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.admin",
        "description": "codeblazeacademyapi.core_root.services.courses.admin",
        "peekOfCode": "class ModuleInline(admin.StackedInline):\n    model = Module\nadmin.site.register(Course)\nadmin.site.register(Content)\nadmin.site.register(Module)",
        "detail": "codeblazeacademyapi.core_root.services.courses.admin",
        "documentation": {}
    },
    {
        "label": "CoursesConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.apps",
        "description": "codeblazeacademyapi.core_root.services.courses.apps",
        "peekOfCode": "class CoursesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.services.courses'\n    label='core_root_services_courses'",
        "detail": "codeblazeacademyapi.core_root.services.courses.apps",
        "documentation": {}
    },
    {
        "label": "OrderField",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.fields",
        "description": "codeblazeacademyapi.core_root.services.courses.fields",
        "peekOfCode": "class OrderField(models.PositiveIntegerField):\n    def __init__(self,for_fields=None,*args,**kwargs):\n        self.for_fields=for_fields\n        super().__init__(*args,**kwargs)\n    def pre_sae(self,model_instance,add):\n        if getattr(model_instance,self.attname) is None:\n            try:\n                qs=self.model.objects.all()\n                if self.for_fields:\n                    query={field:getattr(model_instance,field) for field in self.for_fields}",
        "detail": "codeblazeacademyapi.core_root.services.courses.fields",
        "documentation": {}
    },
    {
        "label": "Subject",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class Subject(models.Model):\n    title = models.CharField(max_length=200)\n    slug = models.SlugField(max_length=200, unique=True)\n    class Meta:\n        ordering = ['title']\n    def __str__(self):\n        return self.title\nclass Course(models.Model):\n    owner = models.ForeignKey(User,\n    related_name='courses_created',",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class Course(models.Model):\n    owner = models.ForeignKey(User,\n    related_name='courses_created',\n    on_delete=models.CASCADE)\n    subject = models.ForeignKey(Subject,\n    related_name='courses',\n    on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    slug = models.SlugField(max_length=200, unique=True)\n    overview = models.TextField()",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class Module(models.Model):\n    order = OrderField(blank=True, for_fields=['course'])\n    course = models.ForeignKey(Course,\n    related_name='modules',\n    on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField(blank=True)\n    class Meta:\n        ordering = ['order']\n    def __str__(self):",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class Content(models.Model):\n    module=models.ForeignKey(Module,related_name='contents',on_delete=models.CASCADE)\n    content_type=models.ForeignKey(ContentType,on_delete=models.CASCADE,limit_choices_to={'model__in':('text','video','image','file')})\n    object_id=models.PositiveIntegerField()\n    item=GenericForeignKey('content_type','object_id')\n    order = OrderField(blank=True, for_fields=['module'])\n    class Meta:\n        ordering = ['order']\n    def __str__(self):\n        return f\"Generated content of type {self.content_type} for module : {self.module}\"",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "BaseContent",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class BaseContent(models.Model):\n    title=models.CharField(max_length=100)\n    created=models.DateTimeField(auto_now_add=True)\nclass OrderedContent(BaseContent):\n    class Meta:\n        proxy=True\n        ordering=['created']\n    def created_delta(self):\n        return timezone.now() - self.created\nclass ItemBase(models.Model):",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "OrderedContent",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class OrderedContent(BaseContent):\n    class Meta:\n        proxy=True\n        ordering=['created']\n    def created_delta(self):\n        return timezone.now() - self.created\nclass ItemBase(models.Model):\n    owner=models.ForeignKey(User,related_name='%(class)s_related',on_delete=models.CASCADE)\n    title=models.CharField(max_length=250)\n    created=models.DateTimeField(auto_now_add=True)",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "ItemBase",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class ItemBase(models.Model):\n    owner=models.ForeignKey(User,related_name='%(class)s_related',on_delete=models.CASCADE)\n    title=models.CharField(max_length=250)\n    created=models.DateTimeField(auto_now_add=True)\n    updated=models.DateTimeField(auto_now=True)\n    class Meta:\n        abstract=True\n    def __str__(self):\n        return self.title\nclass Text(ItemBase):",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Text",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class Text(ItemBase):\n    content=models.TextField()\nclass File(ItemBase):\n    file=models.FileField(upload_to='files')\nclass Image(ItemBase):\n    file=models.FileField(upload_to='images')\nclass Video(ItemBase):\n    url=models.URLField()",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "File",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class File(ItemBase):\n    file=models.FileField(upload_to='files')\nclass Image(ItemBase):\n    file=models.FileField(upload_to='images')\nclass Video(ItemBase):\n    url=models.URLField()",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class Image(ItemBase):\n    file=models.FileField(upload_to='images')\nclass Video(ItemBase):\n    url=models.URLField()",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "Video",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.courses.models",
        "description": "codeblazeacademyapi.core_root.services.courses.models",
        "peekOfCode": "class Video(ItemBase):\n    url=models.URLField()",
        "detail": "codeblazeacademyapi.core_root.services.courses.models",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.routers",
        "description": "codeblazeacademyapi.core_root.services.courses.routers",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'subjects', SubjectViewSet)\nrouter.register(r'courses', CourseViewSet)\nrouter.register(r'modules', ModuleViewSet)\nrouter.register(r'contents', ContentViewSet)\nrouter.register(r'texts', TextViewSet)\nrouter.register(r'files', FileViewSet)\nrouter.register(r'images', ImageViewSet)\nrouter.register(r'videos', VideoViewSet)\nrouter.register(r'enrollments', EnrollMentModelViewSet)",
        "detail": "codeblazeacademyapi.core_root.services.courses.routers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.services.courses.routers",
        "description": "codeblazeacademyapi.core_root.services.courses.routers",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "codeblazeacademyapi.core_root.services.courses.routers",
        "documentation": {}
    },
    {
        "label": "ServicesConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.services.apps",
        "description": "codeblazeacademyapi.core_root.services.apps",
        "peekOfCode": "class ServicesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.services'\n    label='core_root_services'",
        "detail": "codeblazeacademyapi.core_root.services.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0001_initial",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Student',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0002_video_videointeraction",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0002_video_videointeraction",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('core_root_testingdjangosnippets', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Video',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0002_video_videointeraction",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0003_delete_student",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0003_delete_student",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_testingdjangosnippets', '0002_video_videointeraction'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Student',\n        ),\n    ]",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.migrations.0003_delete_student",
        "documentation": {}
    },
    {
        "label": "TestingdjangosnippetsConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.apps",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.apps",
        "peekOfCode": "class TestingdjangosnippetsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.testingdjangosnippets'\n    label='core_root_testingdjangosnippets'",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.apps",
        "documentation": {}
    },
    {
        "label": "Video",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.models",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.models",
        "peekOfCode": "class Video(models.Model):\n    title = models.CharField(max_length=255)\n    youtube_url = models.URLField()\nclass VideoInteraction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    video = models.ForeignKey(Video, on_delete=models.CASCADE)\n    paused_at = models.PositiveIntegerField(default=0)\n    watched_duration = models.PositiveIntegerField(default=0)",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.models",
        "documentation": {}
    },
    {
        "label": "VideoInteraction",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.models",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.models",
        "peekOfCode": "class VideoInteraction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    video = models.ForeignKey(Video, on_delete=models.CASCADE)\n    paused_at = models.PositiveIntegerField(default=0)\n    watched_duration = models.PositiveIntegerField(default=0)",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.models",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.routers",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.routers",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'videos', VideoViewSet, basename='video')\nrouter.register(r'interactions', VideoInteractionViewSet, basename='interaction')\nurlpatterns = router.urls",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.routers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.routers",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.routers",
        "peekOfCode": "urlpatterns = router.urls",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.routers",
        "documentation": {}
    },
    {
        "label": "VideoSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.serializers",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.serializers",
        "peekOfCode": "class VideoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Video\n        fields = '__all__'\nclass VideoInteractionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = VideoInteraction\n        fields = '__all__'",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.serializers",
        "documentation": {}
    },
    {
        "label": "VideoInteractionSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.serializers",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.serializers",
        "peekOfCode": "class VideoInteractionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = VideoInteraction\n        fields = '__all__'",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.serializers",
        "documentation": {}
    },
    {
        "label": "VideoViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.viewsets",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.viewsets",
        "peekOfCode": "class VideoViewSet(viewsets.ModelViewSet):\n    queryset = Video.objects.all()\n    serializer_class = VideoSerializer\nclass VideoInteractionViewSet(viewsets.ModelViewSet):\n    queryset = VideoInteraction.objects.all()\n    serializer_class = VideoInteractionSerializer",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.viewsets",
        "documentation": {}
    },
    {
        "label": "VideoInteractionViewSet",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.testingdjangosnippets.viewsets",
        "description": "codeblazeacademyapi.core_root.testingdjangosnippets.viewsets",
        "peekOfCode": "class VideoInteractionViewSet(viewsets.ModelViewSet):\n    queryset = VideoInteraction.objects.all()\n    serializer_class = VideoInteractionSerializer",
        "detail": "codeblazeacademyapi.core_root.testingdjangosnippets.viewsets",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0001_initial",
        "description": "codeblazeacademyapi.core_root.user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0002_remove_user_phone_number",
        "description": "codeblazeacademyapi.core_root.user.migrations.0002_remove_user_phone_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='phone_number',\n        ),\n    ]",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0002_remove_user_phone_number",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0003_alter_user_is_active",
        "description": "codeblazeacademyapi.core_root.user.migrations.0003_alter_user_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0002_remove_user_phone_number'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='is_active',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0003_alter_user_is_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0004_alter_user_is_active",
        "description": "codeblazeacademyapi.core_root.user.migrations.0004_alter_user_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0003_alter_user_is_active'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0004_alter_user_is_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0005_alter_user_is_active",
        "description": "codeblazeacademyapi.core_root.user.migrations.0005_alter_user_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0004_alter_user_is_active'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='is_active',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0005_alter_user_is_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0006_alter_user_is_active",
        "description": "codeblazeacademyapi.core_root.user.migrations.0006_alter_user_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0005_alter_user_is_active'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0006_alter_user_is_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0007_passwordchangemodel_passwordresetmodel",
        "description": "codeblazeacademyapi.core_root.user.migrations.0007_passwordchangemodel_passwordresetmodel",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0006_alter_user_is_active'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='PasswordChangeModel',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('old_password', models.CharField(max_length=20)),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0007_passwordchangemodel_passwordresetmodel",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0008_alter_user_country",
        "description": "codeblazeacademyapi.core_root.user.migrations.0008_alter_user_country",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0007_passwordchangemodel_passwordresetmodel'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='country',\n            field=models.CharField(blank=True, max_length=1000, null=True),\n        ),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0008_alter_user_country",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.migrations.0009_user_confirm_password",
        "description": "codeblazeacademyapi.core_root.user.migrations.0009_user_confirm_password",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_root_user', '0008_alter_user_country'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='confirm_password',\n            field=models.CharField(blank=True, max_length=1000, null=True),\n        ),",
        "detail": "codeblazeacademyapi.core_root.user.migrations.0009_user_confirm_password",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.serializers.user",
        "description": "codeblazeacademyapi.core_root.user.serializers.user",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    id=serializers.UUIDField(source='public_id',read_only=True,format='hex')\n    created=serializers.DateTimeField(read_only=True)\n    updated=serializers.DateTimeField(read_only=True)\n    class Meta:\n        model=User\n        fields=['id','first_name','last_name','country','username','email','is_active','created','updated']\n        read_only_field=['is_active']   \nclass ChangePasswordSerializer(serializers.ModelSerializer):\n    old_password=serializers.CharField(required=True)",
        "detail": "codeblazeacademyapi.core_root.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "ChangePasswordSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.serializers.user",
        "description": "codeblazeacademyapi.core_root.user.serializers.user",
        "peekOfCode": "class ChangePasswordSerializer(serializers.ModelSerializer):\n    old_password=serializers.CharField(required=True)\n    new_password=serializers.CharField(required=True)\nclass ResetPasswordEmailRequestSerializer(serializers.ModelSerializer):\n    email=serializers.EmailField(min_length=2)\n    class Meta:\n        model=User\n        fields=['email']\n# class SetNewPasswordSerializer(serializers.Serializer):\n#     password=serializers.CharField(min_length=2,max_length=100)",
        "detail": "codeblazeacademyapi.core_root.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "ResetPasswordEmailRequestSerializer",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.serializers.user",
        "description": "codeblazeacademyapi.core_root.user.serializers.user",
        "peekOfCode": "class ResetPasswordEmailRequestSerializer(serializers.ModelSerializer):\n    email=serializers.EmailField(min_length=2)\n    class Meta:\n        model=User\n        fields=['email']\n# class SetNewPasswordSerializer(serializers.Serializer):\n#     password=serializers.CharField(min_length=2,max_length=100)\n#     token=serializers.CharField(min_length=1,write_only=True)\n#     uidb64=serializers.CharField(min_length=1,write_only=True)\n#     class Meta:",
        "detail": "codeblazeacademyapi.core_root.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "CbaStudyAppViewset",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.viewsets.user",
        "description": "codeblazeacademyapi.core_root.user.viewsets.user",
        "peekOfCode": "class CbaStudyAppViewset(viewsets.ModelViewSet):\n    http_method_names=['patch','get']\n    permission_classes=[AllowAny,]\n    serializer_class=UserSerializer\n    def get_queryset(self):\n        if self.request.user.is_superuser:\n            return User.objects.all()\n        return User.objects.exclude(is_superuser=True)\n    def get_object(self):\n        obj=User.objects.get_object_by_public_id(self.kwargs['pk'])",
        "detail": "codeblazeacademyapi.core_root.user.viewsets.user",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.apps",
        "description": "codeblazeacademyapi.core_root.user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root.user'\n    label='core_root_user'",
        "detail": "codeblazeacademyapi.core_root.user.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.models",
        "description": "codeblazeacademyapi.core_root.user.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def get_object_by_public_id(self, public_id):\n        try:\n            instance = self.get(public_id=public_id)\n            return instance\n        except (ObjectDoesNotExist, ValueError, TypeError):\n            return Http404\n    def create_user(self, username, email, password=None, **kwargs):\n        \"\"\"Create and return a `User` with an email, phone number, username and password.\"\"\"\n        # if username is None:",
        "detail": "codeblazeacademyapi.core_root.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.models",
        "description": "codeblazeacademyapi.core_root.user.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    public_id = models.UUIDField(db_index=True, unique=True, default=uuid.uuid4, editable=False)\n    username = models.CharField(db_index=True, max_length=255, unique=True,blank=True,null=True)\n    first_name = models.CharField(max_length=255,null=True,blank=True)\n    last_name = models.CharField(max_length=255,null=True,blank=True)\n    # country = CountryField(blank=False,null=True)\n    country=models.CharField(max_length=1000,null=True,blank=True)\n    # phone_number=models.CharField(max_length=300,blank=True,null=True)\n    email = models.EmailField(db_index=True, unique=True)\n    is_active = models.BooleanField(default=True)",
        "detail": "codeblazeacademyapi.core_root.user.models",
        "documentation": {}
    },
    {
        "label": "CbaStaff",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.models",
        "description": "codeblazeacademyapi.core_root.user.models",
        "peekOfCode": "class CbaStaff(models.Model):\n    user=models.OneToOneField(User,blank=True,null=True,on_delete=models.CASCADE)\n    role_title=models.CharField(max_length=350,null=True,blank=True)\nclass StudentUser(models.Model):\n    user=models.OneToOneField(User,blank=True,null=True,on_delete=models.CASCADE)\n    faculty=models.CharField(max_length=350,null=True,blank=True)\n    department=models.CharField(max_length=350,null=True,blank=True)\n    def __str__(self):\n        return str(self.user)\nclass MentorshipUser(models.Model):",
        "detail": "codeblazeacademyapi.core_root.user.models",
        "documentation": {}
    },
    {
        "label": "StudentUser",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.models",
        "description": "codeblazeacademyapi.core_root.user.models",
        "peekOfCode": "class StudentUser(models.Model):\n    user=models.OneToOneField(User,blank=True,null=True,on_delete=models.CASCADE)\n    faculty=models.CharField(max_length=350,null=True,blank=True)\n    department=models.CharField(max_length=350,null=True,blank=True)\n    def __str__(self):\n        return str(self.user)\nclass MentorshipUser(models.Model):\n    user=models.OneToOneField(User,blank=True,null=True,on_delete=models.CASCADE)\n    student=models.OneToOneField(StudentUser,on_delete=models.CASCADE,blank=True,null=True)\n    def __str__(self):",
        "detail": "codeblazeacademyapi.core_root.user.models",
        "documentation": {}
    },
    {
        "label": "MentorshipUser",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.models",
        "description": "codeblazeacademyapi.core_root.user.models",
        "peekOfCode": "class MentorshipUser(models.Model):\n    user=models.OneToOneField(User,blank=True,null=True,on_delete=models.CASCADE)\n    student=models.OneToOneField(StudentUser,on_delete=models.CASCADE,blank=True,null=True)\n    def __str__(self):\n        return str(self.user)\nclass PasswordChangeModel(models.Model):\n    old_password=models.CharField(max_length=20)\n    final_password=models.CharField(max_length=20)\n    repeat_final_password=models.CharField(max_length=20)\nclass PasswordResetModel(models.Model):",
        "detail": "codeblazeacademyapi.core_root.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordChangeModel",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.models",
        "description": "codeblazeacademyapi.core_root.user.models",
        "peekOfCode": "class PasswordChangeModel(models.Model):\n    old_password=models.CharField(max_length=20)\n    final_password=models.CharField(max_length=20)\n    repeat_final_password=models.CharField(max_length=20)\nclass PasswordResetModel(models.Model):\n    final_password=models.CharField(max_length=20)\n    repeat_final_password=models.CharField(max_length=20)",
        "detail": "codeblazeacademyapi.core_root.user.models",
        "documentation": {}
    },
    {
        "label": "PasswordResetModel",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.models",
        "description": "codeblazeacademyapi.core_root.user.models",
        "peekOfCode": "class PasswordResetModel(models.Model):\n    final_password=models.CharField(max_length=20)\n    repeat_final_password=models.CharField(max_length=20)",
        "detail": "codeblazeacademyapi.core_root.user.models",
        "documentation": {}
    },
    {
        "label": "RegisterUserView",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.user.views",
        "description": "codeblazeacademyapi.core_root.user.views",
        "peekOfCode": "class RegisterUserView(generics.GenericAPIView):\n    serializer_class=RegisterSerializer\n    def post(self,request):\n        user_data=request.data\n        serializer=self.serializer_class(data=user_data)\n        if serializer.is_valid():\n            serializer.save()\n            user=serializer.data\n            return Response({\"data\":user,\"message\":f\"hi {user.first_name} thanks for signing up\"},status=status.HTTP_201_CREATED)\n        return Response(serializer.errors,status=status.HTTP_400_BAD_REQUEST)",
        "detail": "codeblazeacademyapi.core_root.user.views",
        "documentation": {}
    },
    {
        "label": "CoreRootConfig",
        "kind": 6,
        "importPath": "codeblazeacademyapi.core_root.apps",
        "description": "codeblazeacademyapi.core_root.apps",
        "peekOfCode": "class CoreRootConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_root'\n    label='core_root'",
        "detail": "codeblazeacademyapi.core_root.apps",
        "documentation": {}
    },
    {
        "label": "generate_random_link",
        "kind": 2,
        "importPath": "codeblazeacademyapi.testfolders.linkgenerators",
        "description": "codeblazeacademyapi.testfolders.linkgenerators",
        "peekOfCode": "def generate_random_link(length=20):\n    # Define the characters allowed in the link\n    characters = string.ascii_letters + string.digits\n    # Generate a random link by selecting characters randomly\n    random_link = ''.join(random.choice(characters) for _ in range(length))\n    return 'https://'+random_link\n# Example usage:\nrandom_url = generate_random_link()\nprint(\"Generated Random Link:\", random_url)",
        "detail": "codeblazeacademyapi.testfolders.linkgenerators",
        "documentation": {}
    },
    {
        "label": "random_url",
        "kind": 5,
        "importPath": "codeblazeacademyapi.testfolders.linkgenerators",
        "description": "codeblazeacademyapi.testfolders.linkgenerators",
        "peekOfCode": "random_url = generate_random_link()\nprint(\"Generated Random Link:\", random_url)",
        "detail": "codeblazeacademyapi.testfolders.linkgenerators",
        "documentation": {}
    },
    {
        "label": "possibleChanges",
        "kind": 2,
        "importPath": "codeblazeacademyapi.testfolders.printnav",
        "description": "codeblazeacademyapi.testfolders.printnav",
        "peekOfCode": "def possibleChanges(usernames):\n    def is_smaller_after_swap(original, i):\n        modified_username = original[:i] + original[i + 1] + original[i] + original[i + 2:]\n        return ord(original[i]) > ord(modified_username[i])\n    results = []\n    for username in usernames:\n        can_change = any(is_smaller_after_swap(username, i) for i in range(len(username) - 1))\n        results.append(\"YES\" if can_change else \"NO\")\n    return results\nif __name__ == '__main__':",
        "detail": "codeblazeacademyapi.testfolders.printnav",
        "documentation": {}
    },
    {
        "label": "resend.api_key",
        "kind": 5,
        "importPath": "codeblazeacademyapi.testfolders.sendmail",
        "description": "codeblazeacademyapi.testfolders.sendmail",
        "peekOfCode": "resend.api_key = \"re_QPQ9uUgC_AQgi1DuGsDWDMTxxUyo88XPi\"\nr = resend.Emails.send({\n  \"from\": \"send@christiankelechieze.com\",\n  \"to\": \"christiankelechieze@gmail.com\",\n  \"subject\": \"Hello World\",\n  \"html\": \"<p>Congrats on sending your <strong>first email</strong>!</p>\"\n})\nprint(\"end\")",
        "detail": "codeblazeacademyapi.testfolders.sendmail",
        "documentation": {}
    },
    {
        "label": "r",
        "kind": 5,
        "importPath": "codeblazeacademyapi.testfolders.sendmail",
        "description": "codeblazeacademyapi.testfolders.sendmail",
        "peekOfCode": "r = resend.Emails.send({\n  \"from\": \"send@christiankelechieze.com\",\n  \"to\": \"christiankelechieze@gmail.com\",\n  \"subject\": \"Hello World\",\n  \"html\": \"<p>Congrats on sending your <strong>first email</strong>!</p>\"\n})\nprint(\"end\")",
        "detail": "codeblazeacademyapi.testfolders.sendmail",
        "documentation": {}
    },
    {
        "label": "VideoLengthGetter",
        "kind": 6,
        "importPath": "codeblazeacademyapi.testfolders.testvideoanalysis",
        "description": "codeblazeacademyapi.testfolders.testvideoanalysis",
        "peekOfCode": "class VideoLengthGetter(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.setup_ui()\n    def setup_ui(self):\n        self.video_url_label = QLabel(\"YouTube Video URL:\", self)\n        self.video_url_edit = QLineEdit(self)\n        self.get_info_button = QPushButton(\"Get Video Info\", self)\n        self.get_info_button.clicked.connect(self.get_video_info)\n        self.thumbnail_label = QLabel(self)",
        "detail": "codeblazeacademyapi.testfolders.testvideoanalysis",
        "documentation": {}
    },
    {
        "label": "VideoWorker",
        "kind": 6,
        "importPath": "codeblazeacademyapi.testfolders.testvideoupdated",
        "description": "codeblazeacademyapi.testfolders.testvideoupdated",
        "peekOfCode": "class VideoWorker(QThread):\n    time_updated = pyqtSignal(int)\n    def __init__(self, interaction_url, parent=None):\n        super().__init__(parent)\n        self.interaction_url = interaction_url\n        self.is_playing = False\n    def run(self):\n        while True:\n            if self.is_playing:\n                response = requests.get(self.interaction_url)",
        "detail": "codeblazeacademyapi.testfolders.testvideoupdated",
        "documentation": {}
    },
    {
        "label": "VideoLengthGetter",
        "kind": 6,
        "importPath": "codeblazeacademyapi.testfolders.testvideoupdated",
        "description": "codeblazeacademyapi.testfolders.testvideoupdated",
        "peekOfCode": "class VideoLengthGetter(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.setup_ui()\n        self.video_worker = VideoWorker(\"http://localhost:8000/interactions/1/\")\n        self.video_worker.time_updated.connect(self.update_time)\n        self.timer = QTimer(self)\n        self.timer.timeout.connect(self.update_time)\n    def setup_ui(self):\n        self.video_url_label = QLabel(\"YouTube Video URL:\", self)",
        "detail": "codeblazeacademyapi.testfolders.testvideoupdated",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "codeblazeacademyapi.manage",
        "description": "codeblazeacademyapi.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'codeblazeacademyapi.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "codeblazeacademyapi.manage",
        "documentation": {}
    },
    {
        "label": "banks",
        "kind": 5,
        "importPath": "core_app_root.json_datas.read_bank",
        "description": "core_app_root.json_datas.read_bank",
        "peekOfCode": "banks = json.loads(banks_data)\n# Print when the key is '082'\nif \"082\" in banks:\n    print(banks[\"082\"])",
        "detail": "core_app_root.json_datas.read_bank",
        "documentation": {}
    },
    {
        "label": "LoginSerializerClass",
        "kind": 6,
        "importPath": "core_app_root.security.auth.serializer.login",
        "description": "core_app_root.security.auth.serializer.login",
        "peekOfCode": "class LoginSerializerClass(TokenObtainPairSerializer):\n    # ...\n    def validate(self, attrs):\n        data = super().validate(attrs)\n        refresh = self.get_token(self.user)\n        access = refresh.access_token\n        access.set_exp(lifetime=timedelta(hours=100))  # Set access token expiry to 3 hours\n        data['user'] = UserSerializer(self.user).data\n        data['refresh'] = str(refresh)\n        data['access'] = str(access)",
        "detail": "core_app_root.security.auth.serializer.login",
        "documentation": {}
    },
    {
        "label": "PasswordUpdateSerializer",
        "kind": 6,
        "importPath": "core_app_root.security.auth.serializer.passwordreset_serializers",
        "description": "core_app_root.security.auth.serializer.passwordreset_serializers",
        "peekOfCode": "class PasswordUpdateSerializer(serializers.ModelSerializer):\n    # old_password=serializers.CharField(max_length=20)\n    # final_password=serializers.CharField(max_length=20)\n    # repeat_final_password=serializers.CharField(max_length=20)\n    email=serializers.CharField(max_length=1000)\n    class Meta:\n        model=PasswordChangeModel\n        fields='__all__'\nclass ResetPasswordSerializer(serializers.ModelSerializer):\n    email=serializers.CharField(max_length=1000)",
        "detail": "core_app_root.security.auth.serializer.passwordreset_serializers",
        "documentation": {}
    },
    {
        "label": "ResetPasswordSerializer",
        "kind": 6,
        "importPath": "core_app_root.security.auth.serializer.passwordreset_serializers",
        "description": "core_app_root.security.auth.serializer.passwordreset_serializers",
        "peekOfCode": "class ResetPasswordSerializer(serializers.ModelSerializer):\n    email=serializers.CharField(max_length=1000)\n    # final_password=serializers.CharField(max_length=20)\n    # repeat_final_password=serializers.CharField(max_length=20)\n    class Meta:\n        model=PasswordResetModel\n        fields='__all__'",
        "detail": "core_app_root.security.auth.serializer.passwordreset_serializers",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "kind": 6,
        "importPath": "core_app_root.security.auth.serializer.register",
        "description": "core_app_root.security.auth.serializer.register",
        "peekOfCode": "class RegisterSerializer(UserSerializer):\n    password = serializers.CharField(max_length=128, min_length=4, required=True)\n    confirm_password=serializers.CharField(max_length=128,min_length=4,required=True)\n    class Meta:\n        model = User\n        fields = ['id','email', 'username','password','confirm_password']\n    def create(self, validated_data):\n        return User.objects.create_user(**validated_data)",
        "detail": "core_app_root.security.auth.serializer.register",
        "documentation": {}
    },
    {
        "label": "VerifySerializer",
        "kind": 6,
        "importPath": "core_app_root.security.auth.serializer.verify_serializer",
        "description": "core_app_root.security.auth.serializer.verify_serializer",
        "peekOfCode": "class VerifySerializer(serializers.Serializer):\n    confirm_url_end_point=serializers.CharField(max_length=1000)",
        "detail": "core_app_root.security.auth.serializer.verify_serializer",
        "documentation": {}
    },
    {
        "label": "LoginViewSet",
        "kind": 6,
        "importPath": "core_app_root.security.auth.viewsets.login",
        "description": "core_app_root.security.auth.viewsets.login",
        "peekOfCode": "class LoginViewSet(viewsets.ModelViewSet):\n    serializer_class = LoginSerializerClass\n    permission_classes = (AllowAny,)\n    http_method_names = ['post']\n    def create(self, request, *args, **kwargs):\n        serializer = self.serializer_class(data=request.data)\n        # print(serializer)\n        if serializer.is_valid():\n            valid_user=User.objects.get(email=str(serializer.initial_data['email']))\n            if valid_user.is_active==False:",
        "detail": "core_app_root.security.auth.viewsets.login",
        "documentation": {}
    },
    {
        "label": "UpdateLastLoginView",
        "kind": 6,
        "importPath": "core_app_root.security.auth.viewsets.login",
        "description": "core_app_root.security.auth.viewsets.login",
        "peekOfCode": "class UpdateLastLoginView(APIView):\n    permission_classes = [IsAuthenticated]\n    def post(self, request):\n        # Update the last login of the authenticated user\n        request.user.last_login = timezone.now()\n        request.user.save()\n        return Response({\"message\": \"Last login updated.\"})",
        "detail": "core_app_root.security.auth.viewsets.login",
        "documentation": {}
    },
    {
        "label": "RegisterViewSet",
        "kind": 6,
        "importPath": "core_app_root.security.auth.viewsets.register",
        "description": "core_app_root.security.auth.viewsets.register",
        "peekOfCode": "class RegisterViewSet(viewsets.ModelViewSet):\n    serializer_class = RegisterSerializer\n    permission_classes = (AllowAny,)\n    http_method_names = ['post']\n    def generate_random_link(self,length=20):\n        # Define the characters allowed in the link\n        characters = string.ascii_letters + string.digits\n        # Generate a random link by selecting characters randomly\n        random_link = ''.join(random.choice(characters) for _ in range(length))\n        return random_link",
        "detail": "core_app_root.security.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "ActivateAccountView",
        "kind": 6,
        "importPath": "core_app_root.security.auth.viewsets.register",
        "description": "core_app_root.security.auth.viewsets.register",
        "peekOfCode": "class ActivateAccountView(viewsets.ModelViewSet):\n    serializer_class = VerifySerializer\n    permission_classes=[AllowAny]\n    queryset=User.objects.all()\n    http_method_names=['get']\n    @action(detail=False, url_path='verify/(?P<email>[^/]+)')\n    def verify_account(self, request, email=None):\n        # Your logic to activate the account using the email parameter\n        user = get_object_or_404(User, email=email)\n        # Update the _active field to True",
        "detail": "core_app_root.security.auth.viewsets.register",
        "documentation": {}
    },
    {
        "label": "AuthConfig",
        "kind": 6,
        "importPath": "core_app_root.security.auth.apps",
        "description": "core_app_root.security.auth.apps",
        "peekOfCode": "class AuthConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_app_root.security.auth'\n    label='core_app_root_security_auth'",
        "detail": "core_app_root.security.auth.apps",
        "documentation": {}
    },
    {
        "label": "TokenGenerator",
        "kind": 6,
        "importPath": "core_app_root.security.auth.utils",
        "description": "core_app_root.security.auth.utils",
        "peekOfCode": "class TokenGenerator(PasswordResetTokenGenerator):\n    def _make_hash_value(self, user, timestamp):\n        return (six.text_type(user.pk)+six.text_type(timestamp)+six.text_type(user.is_active))\n    def check_token(self, user, token):\n        # Override the check_token method to always return True\n        return True\ngenerate_token = TokenGenerator()",
        "detail": "core_app_root.security.auth.utils",
        "documentation": {}
    },
    {
        "label": "generate_token",
        "kind": 5,
        "importPath": "core_app_root.security.auth.utils",
        "description": "core_app_root.security.auth.utils",
        "peekOfCode": "generate_token = TokenGenerator()",
        "detail": "core_app_root.security.auth.utils",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core_app_root.security.user.migrations.0001_initial",
        "description": "core_app_root.security.user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "core_app_root.security.user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core_app_root.security.user.migrations.0002_user_confirm_password",
        "description": "core_app_root.security.user.migrations.0002_user_confirm_password",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_app_root_security_user', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='confirm_password',\n            field=models.CharField(blank=True, max_length=21, null=True),\n        ),",
        "detail": "core_app_root.security.user.migrations.0002_user_confirm_password",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core_app_root.security.user.migrations.0003_alter_user_confirm_password",
        "description": "core_app_root.security.user.migrations.0003_alter_user_confirm_password",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_app_root_security_user', '0002_user_confirm_password'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='confirm_password',\n            field=models.CharField(blank=True, max_length=1000, null=True),\n        ),",
        "detail": "core_app_root.security.user.migrations.0003_alter_user_confirm_password",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "core_app_root.security.user.serializers.user",
        "description": "core_app_root.security.user.serializers.user",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    id=serializers.UUIDField(source='public_id',read_only=True,format='hex')\n    created=serializers.DateTimeField(read_only=True)\n    updated=serializers.DateTimeField(read_only=True)\n    # confirm_password=serializers.CharField(max_length=128,min_length=4,required=True)\n    class Meta:\n        model=User\n        fields=['id','first_name','last_name','username','email','is_active','created','updated']\n        read_only_field=['is_active']   \nclass ChangePasswordSerializer(serializers.ModelSerializer):",
        "detail": "core_app_root.security.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "ChangePasswordSerializer",
        "kind": 6,
        "importPath": "core_app_root.security.user.serializers.user",
        "description": "core_app_root.security.user.serializers.user",
        "peekOfCode": "class ChangePasswordSerializer(serializers.ModelSerializer):\n    old_password=serializers.CharField(required=True)\n    new_password=serializers.CharField(required=True)\nclass ResetPasswordEmailRequestSerializer(serializers.ModelSerializer):\n    email=serializers.EmailField(min_length=2)\n    class Meta:\n        model=User\n        fields=['email']\n# class SetNewPasswordSerializer(serializers.Serializer):\n#     password=serializers.CharField(min_length=2,max_length=100)",
        "detail": "core_app_root.security.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "ResetPasswordEmailRequestSerializer",
        "kind": 6,
        "importPath": "core_app_root.security.user.serializers.user",
        "description": "core_app_root.security.user.serializers.user",
        "peekOfCode": "class ResetPasswordEmailRequestSerializer(serializers.ModelSerializer):\n    email=serializers.EmailField(min_length=2)\n    class Meta:\n        model=User\n        fields=['email']\n# class SetNewPasswordSerializer(serializers.Serializer):\n#     password=serializers.CharField(min_length=2,max_length=100)\n#     token=serializers.CharField(min_length=1,write_only=True)\n#     uidb64=serializers.CharField(min_length=1,write_only=True)\n#     class Meta:",
        "detail": "core_app_root.security.user.serializers.user",
        "documentation": {}
    },
    {
        "label": "UserViewset",
        "kind": 6,
        "importPath": "core_app_root.security.user.viewsets.user",
        "description": "core_app_root.security.user.viewsets.user",
        "peekOfCode": "class UserViewset(viewsets.ModelViewSet):\n    http_method_names=['patch','get']\n    permission_classes=[AllowAny,]\n    serializer_class=UserSerializer\n    def get_queryset(self):\n        if self.request.user.is_superuser:\n            return User.objects.all()\n        return User.objects.exclude(is_superuser=True)\n    def get_object(self):\n        obj=User.objects.get_object_by_public_id(self.kwargs['pk'])",
        "detail": "core_app_root.security.user.viewsets.user",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "core_app_root.security.user.apps",
        "description": "core_app_root.security.user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_app_root.security.user'\n    label= 'core_app_root_security_user'",
        "detail": "core_app_root.security.user.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def get_object_by_public_id(self, public_id):\n        try:\n            instance = self.get(public_id=public_id)\n            return instance\n        except (ObjectDoesNotExist, ValueError, TypeError):\n            return Http404\n    def create_user(self, username, email, password=None, **kwargs):\n        \"\"\"Create and return a `User` with an email, phone number, username and password.\"\"\"\n        # if username is None:",
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "core_app_root.security.user.models",
        "description": "core_app_root.security.user.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    public_id = models.UUIDField(db_index=True, unique=True, default=uuid.uuid4, editable=False)\n    username = models.CharField(db_index=True, max_length=255, unique=True,blank=True,null=True)\n    first_name = models.CharField(max_length=255,null=True,blank=True)\n    last_name = models.CharField(max_length=255,null=True,blank=True)\n    # country = CountryField(blank=False,null=True)\n    country=models.CharField(max_length=1000,null=True,blank=True)\n    # phone_number=models.CharField(max_length=300,blank=True,null=True)\n    email = models.EmailField(db_index=True, unique=True)\n    is_active = models.BooleanField(default=True)",
        "detail": "core_app_root.security.user.models",
        "documentation": {}
    },
    {
        "label": "SecurityConfig",
        "kind": 6,
        "importPath": "core_app_root.security.apps",
        "description": "core_app_root.security.apps",
        "peekOfCode": "class SecurityConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_app_root.security'\n    label='core_app_root_security'",
        "detail": "core_app_root.security.apps",
        "documentation": {}
    },
    {
        "label": "secret_key",
        "kind": 5,
        "importPath": "core_app_root.testsnippets.fetchbankname",
        "description": "core_app_root.testsnippets.fetchbankname",
        "peekOfCode": "secret_key = 'sk_live_7f39f77453508b7b3b71d48e4dc5fdbbdfe9d2e7'\nbase_url = 'https://api.paystack.co'\nimport requests\n# Define your secret key and base URL\nbase_url = 'https://api.paystack.co'\n# Define endpoint and parameters\nendpoint = '/bank/resolve'\nparams = {\n    'account_number': '0761211732',\n    'bank_code': '044'",
        "detail": "core_app_root.testsnippets.fetchbankname",
        "documentation": {}
    },
    {
        "label": "base_url",
        "kind": 5,
        "importPath": "core_app_root.testsnippets.fetchbankname",
        "description": "core_app_root.testsnippets.fetchbankname",
        "peekOfCode": "base_url = 'https://api.paystack.co'\nimport requests\n# Define your secret key and base URL\nbase_url = 'https://api.paystack.co'\n# Define endpoint and parameters\nendpoint = '/bank/resolve'\nparams = {\n    'account_number': '0761211732',\n    'bank_code': '044'\n}",
        "detail": "core_app_root.testsnippets.fetchbankname",
        "documentation": {}
    },
    {
        "label": "base_url",
        "kind": 5,
        "importPath": "core_app_root.testsnippets.fetchbankname",
        "description": "core_app_root.testsnippets.fetchbankname",
        "peekOfCode": "base_url = 'https://api.paystack.co'\n# Define endpoint and parameters\nendpoint = '/bank/resolve'\nparams = {\n    'account_number': '0761211732',\n    'bank_code': '044'\n}\n# Define headers\nheaders = {\n    'Authorization': f'Bearer {secret_key}'",
        "detail": "core_app_root.testsnippets.fetchbankname",
        "documentation": {}
    },
    {
        "label": "endpoint",
        "kind": 5,
        "importPath": "core_app_root.testsnippets.fetchbankname",
        "description": "core_app_root.testsnippets.fetchbankname",
        "peekOfCode": "endpoint = '/bank/resolve'\nparams = {\n    'account_number': '0761211732',\n    'bank_code': '044'\n}\n# Define headers\nheaders = {\n    'Authorization': f'Bearer {secret_key}'\n}\n# Make GET request",
        "detail": "core_app_root.testsnippets.fetchbankname",
        "documentation": {}
    },
    {
        "label": "params",
        "kind": 5,
        "importPath": "core_app_root.testsnippets.fetchbankname",
        "description": "core_app_root.testsnippets.fetchbankname",
        "peekOfCode": "params = {\n    'account_number': '0761211732',\n    'bank_code': '044'\n}\n# Define headers\nheaders = {\n    'Authorization': f'Bearer {secret_key}'\n}\n# Make GET request\nresponse = requests.get(f'{base_url}{endpoint}', params=params, headers=headers)",
        "detail": "core_app_root.testsnippets.fetchbankname",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "core_app_root.testsnippets.fetchbankname",
        "description": "core_app_root.testsnippets.fetchbankname",
        "peekOfCode": "headers = {\n    'Authorization': f'Bearer {secret_key}'\n}\n# Make GET request\nresponse = requests.get(f'{base_url}{endpoint}', params=params, headers=headers)\n# Print response\nprint(response.json())",
        "detail": "core_app_root.testsnippets.fetchbankname",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "core_app_root.testsnippets.fetchbankname",
        "description": "core_app_root.testsnippets.fetchbankname",
        "peekOfCode": "response = requests.get(f'{base_url}{endpoint}', params=params, headers=headers)\n# Print response\nprint(response.json())",
        "detail": "core_app_root.testsnippets.fetchbankname",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.migrations.0001_initial",
        "description": "core_app_root.user_services.bankmanagement.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='BankAdminManager',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "core_app_root.user_services.bankmanagement.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.migrations.0002_bankadminmanager_admin_user",
        "description": "core_app_root.user_services.bankmanagement.migrations.0002_bankadminmanager_admin_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('core_app_root_user_services_bankmanagement', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='bankadminmanager',\n            name='admin_user',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "core_app_root.user_services.bankmanagement.migrations.0002_bankadminmanager_admin_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.migrations.0003_userbankaccountdetails_account_name_and_more",
        "description": "core_app_root.user_services.bankmanagement.migrations.0003_userbankaccountdetails_account_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_app_root_user_services_bankmanagement', '0002_bankadminmanager_admin_user'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='userbankaccountdetails',\n            name='account_name',\n            field=models.CharField(blank=True, max_length=2000, null=True),\n        ),",
        "detail": "core_app_root.user_services.bankmanagement.migrations.0003_userbankaccountdetails_account_name_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.migrations.0004_alter_userbankaccountdetails_account_number",
        "description": "core_app_root.user_services.bankmanagement.migrations.0004_alter_userbankaccountdetails_account_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core_app_root_user_services_bankmanagement', '0003_userbankaccountdetails_account_name_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userbankaccountdetails',\n            name='account_number',\n            field=models.CharField(max_length=2000, unique=True),\n        ),",
        "detail": "core_app_root.user_services.bankmanagement.migrations.0004_alter_userbankaccountdetails_account_number",
        "documentation": {}
    },
    {
        "label": "BankManagementSerializer",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "description": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "peekOfCode": "class BankManagementSerializer(serializers.ModelSerializer):\n    class Meta:\n        fields=['bank_code','bank_name']\n        model=BankAdminManager\nclass UserBankDetailsSerializer(serializers.ModelSerializer):\n    class Meta:\n        fields=['bank_code','account_number']\n        model=UserBankAccountDetails",
        "detail": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "documentation": {}
    },
    {
        "label": "UserBankDetailsSerializer",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "description": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "peekOfCode": "class UserBankDetailsSerializer(serializers.ModelSerializer):\n    class Meta:\n        fields=['bank_code','account_number']\n        model=UserBankAccountDetails",
        "detail": "core_app_root.user_services.bankmanagement.serializers.bankmanagementserializer",
        "documentation": {}
    },
    {
        "label": "BankManagementViewset",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "description": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "peekOfCode": "class BankManagementViewset(viewsets.ModelViewSet):\n    http_method_names=['get']\n    permission_classes=[permissions.IsAuthenticated]\n    serializer_class=BankManagementSerializer\n    def list(self,request):\n        all_banks = BankAdminManager.objects.all()\n# Extract bank names from the queryset\n        bank_names = [bank.bank_name for bank in all_banks]\n        return Response({\"data\":bank_names},status=status.HTTP_200_OK) \nclass UserBankDetailsViewset(viewsets.ModelViewSet):",
        "detail": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "documentation": {}
    },
    {
        "label": "UserBankDetailsViewset",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "description": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "peekOfCode": "class UserBankDetailsViewset(viewsets.ModelViewSet):\n    serializer_class=UserBankDetailsSerializer\n    permission_classes=[permissions.IsAuthenticated]\n    http_method_names=['get','post']\n    def create(self,request):\n        serializer=self.serializer_class(data=request.data)\n        if serializer.is_valid():\n            print(\"is valid\")\n            import requests\n            from requests.exceptions import JSONDecodeError",
        "detail": "core_app_root.user_services.bankmanagement.viewsets.bankmanagementviewset",
        "documentation": {}
    },
    {
        "label": "BankAdminManagerAdmin",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.admin",
        "description": "core_app_root.user_services.bankmanagement.admin",
        "peekOfCode": "class BankAdminManagerAdmin(admin.ModelAdmin):\n    def has_add_permission(self, request):\n        return request.user.is_superuser\n    def has_change_permission(self, request, obj=None):\n        return request.user.is_superuser\n    def has_delete_permission(self, request, obj=None):\n        return request.user.is_superuser\nadmin.site.register(BankAdminManager, BankAdminManagerAdmin)",
        "detail": "core_app_root.user_services.bankmanagement.admin",
        "documentation": {}
    },
    {
        "label": "BankmanagementConfig",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.apps",
        "description": "core_app_root.user_services.bankmanagement.apps",
        "peekOfCode": "class BankmanagementConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_app_root.user_services.bankmanagement'\n    label= 'core_app_root_user_services_bankmanagement'",
        "detail": "core_app_root.user_services.bankmanagement.apps",
        "documentation": {}
    },
    {
        "label": "UserBankAccountDetails",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "peekOfCode": "class UserBankAccountDetails(models.Model):\n    user=models.ForeignKey(User,on_delete=models.CASCADE)\n    bank_code=models.CharField(max_length=2000,null=True,blank=True)\n    account_number=models.CharField(max_length=2000,unique=True)\n    account_name=models.CharField(max_length=2000,null=True,blank=True)\n    bank_name=models.CharField(max_length=2000,null=True,blank=True)\nclass BankAdminManager(models.Model):\n    bank_code=models.CharField(max_length=1000,null=True,blank=True)\n    bank_name=models.CharField(max_length=5000,null=True,blank=True)\n    admin_user = models.ForeignKey(User, on_delete=models.CASCADE,null=True,blank=True)",
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "BankAdminManager",
        "kind": 6,
        "importPath": "core_app_root.user_services.bankmanagement.models",
        "description": "core_app_root.user_services.bankmanagement.models",
        "peekOfCode": "class BankAdminManager(models.Model):\n    bank_code=models.CharField(max_length=1000,null=True,blank=True)\n    bank_name=models.CharField(max_length=5000,null=True,blank=True)\n    admin_user = models.ForeignKey(User, on_delete=models.CASCADE,null=True,blank=True)\n    def __str__(self):\n        return f\"{self.admin_user} added a new bank details with bank name {self.bank_name} and bank code {self.bank_code}\"",
        "detail": "core_app_root.user_services.bankmanagement.models",
        "documentation": {}
    },
    {
        "label": "WalletAppConfig",
        "kind": 6,
        "importPath": "core_app_root.user_services.wallet_app.apps",
        "description": "core_app_root.user_services.wallet_app.apps",
        "peekOfCode": "class WalletAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_app_root.user_services.wallet_app'\n    label='core_app_root_user_services_wallet_app'",
        "detail": "core_app_root.user_services.wallet_app.apps",
        "documentation": {}
    },
    {
        "label": "UserServicesConfig",
        "kind": 6,
        "importPath": "core_app_root.user_services.apps",
        "description": "core_app_root.user_services.apps",
        "peekOfCode": "class UserServicesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_app_root.user_services'\n    label= 'core_app_root_user_services'",
        "detail": "core_app_root.user_services.apps",
        "documentation": {}
    },
    {
        "label": "CoreAppRootConfig",
        "kind": 6,
        "importPath": "core_app_root.apps",
        "description": "core_app_root.apps",
        "peekOfCode": "class CoreAppRootConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core_app_root'\n    label='core_app_root'",
        "detail": "core_app_root.apps",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'blankexchange.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]